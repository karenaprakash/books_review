{"version":3,"sources":["firebase-config.js","actions/index.js","widgetsUI/book_item.js","containers/home_container.js","components/Home/home.js","components/BookView/book_view.js","containers/Admin/login.js","components/SideNavItems/sidenavitems.js","components/Sidenav/sidenav.js","components/Header/header.js","hoc/Layout/layout.js","hoc/Auth/auth.js","components/Admin/user.js","containers/Admin/add.js","containers/Admin/edit.js","components/Admin/userPosts.js","containers/Admin/register.js","components/Admin/logout.js","routes.js","reducers/user_reducer.js","reducers/index.js","reducers/books_reducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","getBooks","limit","start","order","list","type","payload","axios","get","then","response","data","addBookError","error","console","log","addBook","book","dispatch","currentImageName","Date","now","ref","put","bookImage","on","snapshot","child","getDownloadURL","url","post","alert","reset","catch","err","clearNewBook","getBook","id","updateBook_with_image","EditBookError","request","updateBook_without_image","deleteBook","image","refFromURL","delete","clearBook","updateBook","postDeleted","BookItem","item","to","_id","className","name","author","price","pages","rating","HomeContainer","renderItems","books","map","key","loadmore","count","props","length","this","onClick","Component","connect","state","Home","BookView","renderBook","reviewer","lastname","src","alt","review","ownerId","getBookWithReviewer","match","params","Login","email","password","success","handleInputEmail","event","setState","target","value","handleInputPassword","submitForm","e","preventDefault","loginUser","nextProps","user","login","isAuth","history","push","onSubmit","placeholder","onChange","message","onHideNav","items","icon","text","link","restricted","exclude","element","i","Nav","showNav","navStyle","background","maxWidth","Header","style","color","padding","cursor","Layout","children","ComposedClass","reload","AuthenticationCheck","loading","User","AddBook","bookName","imageUrl","isSubmited","bookData","loader","show","handleFileChange","files","URL","createObjectURL","file","renderFileInputField","field","input","fileInputKey","meta","touched","myLabel","handleSelectChange","values","handleSubmit","method","encType","Field","component","renderInputField","renderTextareaField","renderNumberInputField","renderSelectField","book_value","initialValues","reduxForm","validate","errors","form","enableReinitialize","EditBook","formData","isBookSelected","isFormChanged","deletePost","Object","entries","window","scrollTo","redirectUser","setTimeout","JSON","stringify","PureComponent","UserPosts","showUserPosts","userPosts","moment","createAt","format","userId","Register","handleInputName","handleInputLastName","userList","users","userRegister","showUsers","register","Logout","Routes","path","exact","Auth","EditReview","rootReducer","combineReducers","action","newbook","doc","formReducer","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","withExtraArgument","createStore","ReactDOM","render","store","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.683959fb.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/storage';\n\n\nlet firebaseConfig = {\n    apiKey: \"AIzaSyBQyJUdzSNoqvF57H0kL2xl1svlAtfi84g\",\n    authDomain: \"booksreview-4122b.firebaseapp.com\",\n    databaseURL: \"https://booksreview-4122b.firebaseio.com\",\n    projectId: \"booksreview-4122b\",\n    storageBucket: \"booksreview-4122b.appspot.com\",\n    messagingSenderId: \"225638829365\",\n    appId: \"1:225638829365:web:9ca5d276a1b794865a107c\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  //firebase.analytics();\n\n  let storage = firebase.storage();\n  \n  let API_URL = 'gs://booksreview-4122b.appspot.com';\n  \n  export{\n      storage,\n      API_URL,\n      firebase \n  };","/**\n *  actions : all actions which are used in this project\n */\nimport axios from 'axios';\nimport {reset} from 'redux-form';\n\n/*-------- firebase -------------*/\nimport {storage } from '../firebase-config.js';\n\n//getBooks : get all books\nexport function getBooks(\n    limit = 10,\n    start = 0,\n    order = 'asc',\n    list = ''\n\n){\n    const request = axios.get(`/api/getBooks?limit=${limit}&skip=${start}&order=${order}`)\n                    .then( response => {\n                        if(list){\n                            return [...list,...response.data]\n                        }else{\n                            return response.data\n                        }\n                    })\n\n\n    return{\n        type : 'GET_BOOKS',\n        payload : request \n    }\n}\n//getBookWithReviewer\nexport function getBookWithReviewer(id){\n  \n    const request = axios.get(`/api/getBook?id=${id}`)\n  \n    return (dispatch) => {\n        request.then(({data})=>{\n            let book = data;\n\n            axios.get(`/api/getReviewer?id=${book.ownerId}`)\n            .then(({data})=>{\n                let response = {\n                    book,\n                    reviewer : data\n                }\n               // console.log(response)\n                dispatch({\n                    type : 'GET_BOOK_W_REVIEWER',\n                    payload : response \n                })\n            })\n\n            \n        })\n    }\n\n}\n//clearBookWithReviewer : clear book used when we go inside perticuler book and come outside  \nexport function clearBookWithReviewer(){\n        return{\n            type : 'CLEAR_BOOK_W_REVIEWER',\n            payload : {\n                book : {},\n                reviewer : {}\n            } \n        }\n}\n\n\n/*\nexport function  addBook(book) {\n    console.log(book.get('bookImage'))\n    let currentImageName = \"firebase-image-\"+Date.now();\n    let uploadImage = storage.ref(`images/${currentImageName}`).put(book.get('bookImage'));\n    uploadImage.on('state_changed',\n        (snapshot) => { console.log('image uploaded') },\n        (error) => {\n            alert(error);\n        },\n        () => {\n            storage.ref('images').child(currentImageName).getDownloadURL().\n            then(url => {\n                const  bookImage = url;\n                let formData = new FormData();\n                formData = book;\n                \n                book.bookImage = bookImage;\n\n                if(url){\n                    const request = axios.post('/api/book',book)\n                    .then(response => {\n                        alert('Data uploaded Successfully.')\n                        return response.data \n                    })\n                    .catch((err) => {\n                        alert('error while uploading image using firebase storage')\n                    });\n    \n                    return{\n                        type : 'ADD_BOOKIMAGE_IN_FB',\n                        payload : request\n                    }\n                }\n                \n            })\n        }\n    )\n}\n*/\n\nfunction addBookStart() {\n    console.log('start')\n\treturn {\n\t\ttype: 'ADD_BOOK_START',\n\t\tpayload: 'start'\n\t};\n}\n\nfunction addBookSuccess(response) {\n    console.log('done')\n\treturn {\n\t\ttype: 'ADD_BOOK_SUCCESS',\n\t\tpayload: 'done'\n\t};\n}\n\nfunction addBookError(error) {\n    console.log(error);\n\treturn {\n\t\ttype: 'ADD_BOOK_ERROR',\n\t\tpayload: 'error'\n\t};\n}\n\n//addBook : add book action\nexport const addBook = (book) => \n    (dispatch ) =>{\n  \n    let currentImageName = \"firebase-image-\"+Date.now();\n    let uploadImage = storage.ref(`images/${currentImageName}`).put(book.bookImage[0]);\n    uploadImage.on('state_changed',\n        (snapshot) => { \n            dispatch(addBookStart());\n         },\n        (error) => {\n            dispatch(addBookError(error));\n        },\n        () => {\n            storage.ref('images').child(currentImageName).getDownloadURL()\n            .then(url => {                \n               book.bookImage = url\n                console.log(book);\n                if(url){\n                    const request = axios.post('/api/book',book)\n                    .then(response => {\n                        console.log(response.data);\n                        if(response.data.post){\n                            alert('Data uploaded Successfully.')\n                            dispatch(reset('AddBook'))\n                            dispatch(addBookSuccess(response))\n                        }else{\n                            dispatch(addBookError('error'));\n                            alert('Error while uploading data.Please try again later')\n                        }\n                        \n                       \n                        return response.data \n                    })\n                    .catch((err) => {\n                         dispatch(addBookError(err));\n                        alert('error while uploading image using firebase storage')\n                    });\n                   /*\n                    return{\n                        type : 'ADD_BOOKIMAGE_IN_FB',\n                        payload : request\n                    }\n                    */\n                }\n                \n            });\n        }\n    )\n}\n\n\n\n//clearNewBook : clear new book in add review page \nexport function clearNewBook(){\n    return{\n        type : 'CLEAR_NEWBOOK',\n        payload : {}\n    }\n}\n\n//getUserPosts : get user's all post\nexport function getUserPosts(userId){\n    const request = axios.get(`/api/user_posts?id=${userId}`)\n                    .then(response => response.data)\n    return{\n        type : 'GET_USER_POSTS',\n        payload : request\n    }\n}\n\n//getBook \nexport function getBook(id){\n    const request = axios.get(`/api/getBook?id=${id}`)\n                    .then(response => response.data)    \n        return{\n            type : 'GET_BOOK',\n            payload : request\n        }\n}\n/*\n//updateBook_with_image\nexport function updateBook_with_image(data){\n    const request = axios.post(`/api/book_with_img_update`,data)\n                     .then(response => response.data)    \n    return{\n        type : 'UPDATE_BOOK_WITH_IMG',   \n        payload : request\n    }\n}\n*/\n\n/*=================================================================*/\n\n\nfunction EditBookStart() {\n    console.log('start')\n\treturn {\n\t\ttype: 'ADD_BOOK_START',\n\t\tpayload: 'start'\n\t};\n}\n\nfunction EditBookSuccess(response) {\n    console.log('done')\n\treturn {\n\t\ttype: 'UPDATE_BOOK_WITH_IMG',\n\t\tpayload: response\n\t};\n}\n\nfunction EditBookError(error) {\n    console.log(error);\n\treturn {\n\t\ttype: 'ADD_BOOK_ERROR',\n\t\tpayload: 'error'\n\t};\n}\n\n//addBook : add book action\nexport const updateBook_with_image = (book) => \n    (dispatch ) =>{\n  \n    let currentImageName = \"firebase-image-\"+Date.now();\n    let uploadImage = storage.ref(`images/${currentImageName}`).put(book.bookImage[0]);\n    uploadImage.on('state_changed',\n        (snapshot) => { \n            dispatch(EditBookStart());\n         },\n        (error) => {\n            dispatch(EditBookError(error));\n        },\n        () => {\n            storage.ref('images').child(currentImageName).getDownloadURL().\n            then(url => {\n                \n               book.bookImage = url\n                console.log(book);\n                if(url){\n\n                    const request = axios.post(`/api/book_with_img_update`,book)\n                     .then(response => response.data)\n                     dispatch(EditBookSuccess(request))\n                    /*\n                    const request = axios.post('/api/book',book)\n                    .then(response => {\n                        console.log(response.data);\n                        if(response.data.post){\n                            alert('Data uploaded Successfully.')\n                            dispatch(reset('AddBook'))\n                            dispatch(EditBookSuccess(response))\n                        }else{\n                            dispatch(EditBookError('error'));\n                            alert('Error while uploading data.Please try again later')\n                        }                       \n                        return response.data \n                    })\n                    .catch((err) => {\n                         dispatch(addBookError(err));\n                        alert('error while uploading image using firebase storage')\n                    });\n                    */\n\n\n\n                   /*\n                    return{\n                        type : 'ADD_BOOKIMAGE_IN_FB',\n                        payload : request\n                    }\n                    */\n                }\n                \n            })\n        }\n    )\n}\n\n\n\n\n/*=================================================================*/\n\n//updateBook_without_image\nexport function updateBook_without_image(data){\n    const request = axios.post(`/api/book_without_img_update`,data)\n                     .then(response => response.data)    \n    return{\n        type : 'UPDATE_BOOK_WITHOUT_IMG',   \n        payload : request\n    }\n}\n//deleteBook\nexport function deleteBook(id,image){\n   // console.log(image);\n    let deleteImage = storage.refFromURL(image).delete();\n\n    const request = axios.delete(`/api/delete_book?id=${id}`)\n                    .then(response => response.data)\n\n                    return{\n                        type : 'DELETE_BOOK',   \n                        payload : request\n                    }\n\n}\n//clearBook\nexport function clearBook(){\n    return {\n        type : 'CLEAR_BOOK',\n        payload : {\n            book : null,\n            updateBook : false,\n            postDeleted : false\n        }\n    }\n}\n\n\n\n/*========== USER : actions related to user ============*/\n//loginUser : for login\nexport function loginUser({email,password}){\n    const request = axios.post(\"/api/login\",{email,password})\n                    .then(response => response.data )\n\n    return{\n        type : 'USER_LOGIN',\n        payload : request\n     }\n}\n//auth : for authentication\nexport function   auth(){\n   const request = axios.get('/api/auth')\n                    .then(response => response.data);\n\n    return {\n        type : 'USER_AUTH',\n        payload : request\n    }\n}\n//getUsers : get all users\nexport function getUsers(){\n    const request = axios.get('/api/users')\n                    .then(response => response.data)\n    return {\n        type : 'GET_USER',\n        payload : request\n    }\n\n}\n//userRegister : add new user\nexport function userRegister(user,userList){\n    const request = axios.post('/api/register',user)\n    \n\n    return (dispatch) => {\n        request.then(({data})=>{\n            let users = data.success ? [...userList,data.user] : userList\n            let response = {\n                success : data.success,\n                users \n            }\n\n            dispatch({\n                type : 'USER_REGISTER',\n                payload : response\n            })\n        })\n    }\n\n\n}","/**\n * BookItem : BookItem Page  * \n */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BookItem = (item) => {\n    return (\n        <Link to={`/books/${item._id}`} className='book_item'>\n            <div className=\"book_header\">\n                <h2>{item.name}</h2>\n            </div>\n            <div className='book_items'>\n                <div className='book_author'>\n                    {item.author}\n                </div>\n                <div className='book_bubble'>\n                    <strong>Price</strong> ${item.price}\n                </div>\n                <div className='book_bubble'>\n                    <strong>Pages</strong> {item.pages}\n                </div>\n                <div className='book_bubble rating'>\n                    <strong>Rating</strong> {item.rating}\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nexport default BookItem;","   /**\n    * home_container : component for home \n    * it is conected with redux store\n    * \n    */\n   import React, { Component } from 'react';\n    import { connect } from 'react-redux';\n    import { getBooks ,clearBook } from '../actions';\n    import BookItem from '../widgetsUI/book_item';\n\n\n    class HomeContainer extends Component {\n\n        componentWillMount(){\n            this.props.dispatch(getBooks(5,0,'desc'))\n        }\n\n    componentWillUnmount(){\n       // this.props.dispatch(clearBooks())\n    }\n    \n\n        renderItems = (books) => (\n            books.list ? \n            books.list.map(item => (\n                <BookItem {...item} key = { item._id } />\n            ))\n            : null\n        )\n\n        loadmore = () => {\n            const count = this.props.books.list.length;\n            this.props.dispatch(getBooks(5,count,'desc',this.props.books.list))\n        }\n\n        render() {\n            return (\n                <div>\n                    {this.renderItems(this.props.books)}\n                    <div className='loadmore'\n                        onClick={this.loadmore}\n                    >Load More</div>\n                </div>\n            )\n        }\n    }\n\n    function mapStateToProps(state){\n        //console.log(state)\n        return {\n            books : state.books\n        }\n\n    }\n\n    export default   connect(mapStateToProps)(HomeContainer);","/**\n* home page\n* \n*/\n    import React from 'react';\n    import HomeContainer from '../../containers/home_container';    \n\n    const Home = () => {\n        return (\n            <div>\n                <HomeContainer /> \n            </div>\n        );\n    };\n    \n    export default Home;","   /**\n    * book_view : only perticuler book view component \n    * http://localhost:3000/books/id\n    * \n    */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getBookWithReviewer , clearBookWithReviewer } from '../../actions';\n\n class BookView extends Component {\n\n\n    componentWillMount () {\n        this.props.dispatch(getBookWithReviewer(this.props.match.params.id))\n    }\n\n    componentWillUnmount () {\n        this.props.dispatch(clearBookWithReviewer())\n    }\n\n    renderBook = (books) => (\n        books.book ? \n        <div\n            className='br_container'\n         >\n         <div className=\"br_header\">\n            <h2>{books.book.name}</h2>\n            <h5>{books.book.author}</h5>\n            <div className=\"br_reviewer\">\n                <span>Review By:</span> { books.reviewer.name } {books.reviewer.lastname}\n            </div>\n            <div className=\"br_image\">\n                    <img src={`${books.book.bookImage}`} alt='book'/>\n            </div>\n         </div> \n         <div className=\"br_review\">\n            {books.book.review}\n         </div>\n         <div className=\"br_box\">\n            <div className=\"left\">\n                <div>\n                    <span>Pages:</span>{books.book.pages}\n                </div>\n                <div>\n                    <span>Price:</span> ${books.book.price}\n                </div>\n            </div>\n            <div className=\"right\">\n                <span>Rating</span>\n                <div>{books.book.rating}/5</div>\n            </div>\n         </div>\n         </div>\n        : \n        null\n    )\n\n    render() {\n        let books = this.props.books;\n        //console.log(books)\n        return (\n            <div>\n                {this.renderBook(books)}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        books : state.books\n    }\n\n}\n\nexport default connect(mapStateToProps)(BookView);","/**\n * login.js : login page\n * \n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions';\n\nclass Login extends Component {\n  \n  \n    state = {\n        email: '',\n        password : '',\n        error : '',\n        success : false\n    }\n\n    \n    handleInputEmail = (event) =>{\n        this.setState({\n            email : event.target.value\n        })\n\n    }\n\n    handleInputPassword = (event) =>{\n        this.setState({\n            password : event.target.value\n        })\n    }\n\n    componentWillReceiveProps (nextProps) {\n        if(nextProps.user.login.isAuth){\n            this.props.history.push('/user')\n        }\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        this.props.dispatch(loginUser(this.state))\n    }\n\n    render() {\n\n        let user = this.props.user;\n        return (\n            <div className=\"rl_container\">\n                <form onSubmit={this.submitForm}>\n                    <h2>Login Here</h2>\n                    <div className=\"form_element\">\n                        <input\n                            type = \"email\"\n                            placeholder = \"Enter Your Email\"\n                            value = { this.state.email }\n                            onChange = {this.handleInputEmail}\n                        />\n                    </div>\n                    <div className=\"form_element\">\n                        <input\n                            type = \"password\"\n                            placeholder = \"Enter Your Password\"\n                            value = { this.state.password }\n                            onChange = {this.handleInputPassword}\n\n                        />\n                    </div>\n                    <button type=\"submit\">Login</button>\n                <div className=\"error\">\n                {\n                    user.login ? \n                    <div>{user.login.message}</div>\n                    :null\n                }\n                </div>               \n                </form>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps (state) {\n    return{\n        user : state.user\n    }\n}\n\nexport default connect(mapStateToProps)(Login);","   /**\n    * sidenavitems : items for side navbar\n    * \n    */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport { connect } from 'react-redux';\n\n\nconst SideNavItems = ({user,onHideNav}) => {\n\n    const items = [\n        {\n            type : 'navItem',\n            icon : 'home',\n            text : 'Home',\n            link : '/',\n            restricted : false\n        },\n        {\n            type : 'navItem',\n            icon : 'file-text-o',\n            text : 'My Profile',\n            link : '/user',\n            restricted : true\n        },\n        {\n            type : 'navItem',\n            icon : 'users',\n            text : 'Add Admins',\n            link : '/user/register',\n            restricted : true\n        },\n        {\n            type : 'navItem',\n            icon : 'sign-in',\n            text : 'Login',\n            link : '/login',\n            restricted : false,\n            exclude : true\n        }, {\n            type : 'navItem',\n            icon : 'plus',\n            text : 'Add Reviews',\n            link : '/user/add',\n            restricted : true\n        }, \n        {\n            type : 'navItem',\n            icon : 'star',\n            text : 'My Reviews',\n            link : '/user/user-reviews',\n            restricted : true\n        },\n        {\n            type : 'navItem',\n            icon : 'sign-out',\n            text : 'Logout',\n            link : '/user/logout',\n            restricted : true\n        }\n    ]\n\n    const element = (item,i) => (\n        <div key={i} className={item.type} onClick={onHideNav}>\n            <Link to={item.link}>\n                    <FontAwesome name={item.icon} />\n                    {item.text}\n            </Link>\n        </div> \n    )\n    \n    \n    const showItems = () => (\n        user.login ? \n        items.map((item,i)=>{\n            if(user.login.isAuth){\n                return !item.exclude ? element(item,i) : null\n            }else{\n                return !item.restricted ? element(item,i) : null\n            }\n        \n        }) : \n        null\n    )\n\n    return (\n        <div>\n            {showItems()}\n        </div>\n    );\n};\n\nfunction mapStateToProps(state){\n    return{\n        user : state.user\n    }\n}\n\nexport default connect(mapStateToProps)(SideNavItems);","/**\n * sidenav : side navbar\n * \n */\nimport React from 'react';\nimport SideNav from 'react-simple-sidenav';\nimport SideNavItems from '../SideNavItems/sidenavitems';\n\n\nconst Nav = (props) => {\n    return (\n      <SideNav\n        showNav = {props.showNav}\n        onHideNav = {props.onHideNav}\n        navStyle = {{\n            background : '#242424',\n            maxWidth : '220px'\n        }}\n      >\n          <SideNavItems onHideNav = {props.onHideNav} /> \n      </SideNav>\n    );\n};\n\nexport default Nav;","   /**\n    * Header.js : header component\n    *  \n    */\nimport React, { Component } from 'react'\nimport FontAwesome from 'react-fontawesome';\nimport  { Link } from 'react-router-dom';\nimport Nav from '../Sidenav/sidenav';\n\nclass Header extends Component {\n\n    state = {\n        showNav : false\n    }\n\n    onHideNav = () =>{\n        this.setState({\n            showNav : false\n        })\n    }\n\n    render() {\n        return (\n            <header>\n                <div className=\"open_nav\">\n\n                    <FontAwesome name=\"bars\"\n                       onClick= {()=>this.setState({showNav : true})}\n                        style={{\n                            color : '#ffffff',\n                            padding : '10px',\n                            cursor : 'pointer'\n                        }}\n                    />\n               </div>\n               <Nav\n                    showNav = {this.state.showNav}\n                    onHideNav = {()=> this.onHideNav()}\n               />\n                        <Link to='/' className='logo'>\n                        The Book's Reviews  \n                    </Link>\n              \n            </header>\n         )\n    }\n}\n\nexport default  Header;\n        ","/**\n * layout.js : Main layout component\n * \n */\nimport React from 'react';\nimport Header from '../.././components/Header/header';\n\n\nconst Layout = (props) => {\n    return (\n\n        <div>\n            <Header/>\n            <div>\n                 {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default Layout;","/**\n * auth.js : it handles user is authenticated or not\n * \n */\nimport React, { Component } from 'react';\nimport { auth } from '../../actions'\nimport { connect } from 'react-redux';\n\nexport default function(ComposedClass,reload){\n    class AuthenticationCheck extends Component{\n    \n        state = {\n            loading : true\n        }\n\n        componentWillMount () {\n            this.props.dispatch(auth())\n        }\n\n        componentWillReceiveProps (nextProps) {\n            this.setState({\n                loading : false\n            })\n\n            if(!nextProps.user.login.isAuth){\n                if(reload){\n                    this.props.history.push('/login')\n                }\n            }else{\n                if(reload === false){\n                    this.props.history.push('/user')\n                }\n            }\n        } \n    \n        render(){\n            if(this.state.loading){\n                return <div className=\"loader\"> Loading... </div>\n            }\n            return(\n               <ComposedClass {...this.props} user={this.props.user} />\n            )\n        }\n    }\n\n    function mapStateToProps(state){\n        return{\n            user: state.user\n        }\n    }\n    return connect(mapStateToProps)(AuthenticationCheck)\n}","   /**\n    * user.js : user profile page \n    * \n    */\nimport React from 'react';\n\nconst User = (props) => {\n  let user =   props.user.login;\n    return (\n        <div className=\"user_container\">\n            <div className=\"avatar\">\n                <img alt=\"avatar\" src=\"/images/avatar.png\" />\n            </div>\n            <div className=\"nfo\">\n                <div><span>Name:</span> {user.name}</div>\n                <div><span>Lastname:</span> {user.lastname}</div>\n                <div><span>Email:</span> {user.email}</div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default User;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { addBook , clearNewBook } from '../../actions'\n/*------- redux form --------*/\nimport { Field, reduxForm  } from 'redux-form';\n\nclass AddBook extends Component {\n\n    state = {\n        bookImage : null,\n        bookName : '',\n        imageUrl : '',\n        isSubmited : false,\n        bookData : null,\n        loader : false,\n        show : true\n    }\n\n    //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n/*------- renderInputField  --------*/\n    renderInputField(field){\n       //    console.log(field)\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return (\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input type=\"text\" {...field.input}   onChange = {field.input.onChange}  />\n                <div className=\"error\">\n                    {field.meta.touched? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n\n/*------- renderFileInputField  --------*/\nhandleFileChange = (event) => {\n    console.log(event.target.files[0]);\n    if (event.target.files && event.target.files[0]) {\n        this.setState({\n          imageUrl : URL.createObjectURL(event.target.files[0]),\n          show : true\n        });\n      }\n\n  //  console.log(this.state.bookImage)\n     if(event.target.file){\n        this.setState({\n            bookImage : event.target.files[0],\n            bookName : event.target.files[0].name\n        })\n     } \n    \n}\n\n\n\nrenderFileInputField = (field) => {\n    if(field.input.value){\n        console.log(field.input.value.length)\n    }\n    const fileInputKey = field.input.value ? this.state.bookName : +new Date();  // key = {fileInputKey}\n    console.log(fileInputKey)\n    const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n    //console.log(field.input.value);\n\n    return (\n        <div className={className}>\n            <label>{field.myLabel}</label>\n            <input \n            key={fileInputKey}\n            type=\"file\"   \n            onChange = {field.input.onChange} \n            />\n            <div className=\"error\">\n                {field.meta.touched ? field.meta.error:''}\n            </div>\n        </div>\n    )\n}\n/*------- renderTextareaField  --------*/\n    renderTextareaField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <textarea \n                    {...field.input}\n                ></textarea>\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderTextareaField  --------*/\n    renderNumberInputField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input \n                type=\"number\"  \n                {...field.input}   \n                onChange = {field.input.onChange} \n                />\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n    \n\n    /*------- renderSelectField  --------*/\n\n    handleSelectChange = (event) => {\n        console.log(event.target.value)\n    }\n\n    renderSelectField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n\n                \n               <select  {...field.input}   onChange = {field.input.onChange}  >\n                    {field.children}\n               </select>\n\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n\n\n\n\n\n\n  \n/*------- onSubmit() : runs on submit  --------*/\n    onSubmit(values){       \n          values.ownerId = this.props.user.login.id;\n         // console.log(values)\n          this.props.dispatch(addBook(values));\n      \n         this.setState({\n             isSubmited : true\n         })\n    }\n\n    componentWillUnmount() {\n        console.log('component will unmount')\n\n        this.props.dispatch(clearNewBook())\n    }\n\n    componentWillMount(){\n        console.log('component will mount')\n        this.props.dispatch(clearNewBook())\n    }\n\n    componentDidUpdate(){\n        console.log('component did update')\n    }\n\n    componentWillUpdate(){\n        console.log('component will update')\n    }\n\n    shouldComponentUpdate(){\n        console.log('component should update')\n        return true\n    }\n    \n    componentWillReceiveProps(nextProps){\n        console.log('component will reciveProps')\n\n       // if our data is stored in database then it hide the previous image.\n        if(this.state.imageUrl !== '' && nextProps.data.bookImage !== null && nextProps.data.bookImage === \"done\"){\n            this.setState({\n                show : false\n            })\n            //making our anser 'done' to empty for next uploadation\n            nextProps.data.bookImage = '';\n        }\n        console.log(nextProps)\n      \n    }\n  \n    render(){\n\n       //console.log(this.props);\n\n        return(\n            <div className=\"Form\">\n                <div className=\"top\">\n                    <h3>Add a Review</h3>\n                    <Link to=\"/\">Back</Link>\n                </div>\n                  \n                <form onSubmit={this.props.handleSubmit((event)=>this.onSubmit(event))} method=\"POST\" encType=\"multipart/form-data\">\n\n                    <Field\n                        myLabel=\"Enter Name\"\n                        name=\"name\"\n                        component={this.renderInputField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter Author\"\n                        name=\"author\"\n                        component={this.renderInputField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter Review\"\n                        name=\"review\"\n                        component={this.renderTextareaField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter Pages\"\n                        name=\"pages\"\n                        component={this.renderNumberInputField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter Price\"\n                        name=\"price\"\n                        component={this.renderNumberInputField}\n                    />\n\n                    <Field\n                        myLabel=\"Select Rating\"                    \n                        name=\"rating\"\n                        \n                        component={this.renderSelectField}>\n                        <option></option>\n                        <option value='1'>1</option>\n                        <option value='2'>2</option>\n                        <option value='3'>3</option>\n                        <option value='4'>4</option>\n                        <option value='5'>5</option>\n                    </Field>\n \n                    <Field \n                    myLabel=\"Select Book Image\"                                        \n                    name=\"bookImage\"\n                    type=\"file\"\n                    onChange={this.handleFileChange}\n                    component={this.renderFileInputField}\n                    />\n                    {\n                    this.state.imageUrl !== '' && this.props.data.bookImage !== null && this.state.show?\n                    <div className=\"br_image\">\n                        <img src={this.state.imageUrl} alt='product'/>\n                    </div> \n                    : null\n                    \n                    }\n                    {\n                        this.props.data.bookImage !== null && this.props.data.bookImage === 'start' ?\n                        <div className=\"loader\"> Loading... </div>\n                        : null\n                    }\n                \n                    <button type=\"submit\">Submit</button>\n\n                </form>\n            </div>\n        )\n    }\n}\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values){\n   // console.log(values)\n    const errors = {};\n\n    if(!values.name){\n        errors.name = \"The name is empty\"\n    }\n\n    if(!values.author){\n        errors.author = \"The author is empty\"\n    }\n\n    if(!values.review){\n        errors.review = \"The review is empty\"\n    }\n\n    if(!values.pages){\n        errors.pages = \"The pages is empty\"\n    }\n\n    if(!values.price){\n        errors.price = \"The price is empty\"\n    }\n\n    if(!values.rating){\n        errors.rating = \"The rating is empty\"\n    }\n/*\n    if(values.bookImage){\n\n        if(values.bookImage.length != 0){\n            if(values.bookImage[0].size > 200000){\n                errors.bookImage = \"The bookImage size must be less then 200kb\"\n            }\n        }\n    }\n*/\n    \n\n    if(!values.bookImage || values.bookImage.length === 0 ){\n        errors.bookImage = \"The bookImage is empty\"\n    }\n\n    \n\n    return errors;\n}\n    /*------- it returns messages when action is called and state going to change  --------*/\n   \nfunction mapStateToProps(state){\n    //console.log(state.books)\n    \n    let book_value = {}\n    book_value =  {\n        name : '',\n        author : '',\n        review : '',\n        pages : '',\n        rating : '',\n        price : '',\n        bookImage : ''\n    }\n\n    return {\n        data: state.books,\n        initialValues : book_value,\n    }\n}\n\n    /*------- reduxForm : connects redux-form with react form   --------*/\n\n export default connect( mapStateToProps, {addBook,clearNewBook})(\n    reduxForm({\n        validate,\n        form: 'AddBook',\n        enableReinitialize : true,\n    })(AddBook)\n );","/**\n * edit.js : edit review page\n * \n */\nimport React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { getBook , updateBook_with_image , updateBook_without_image , clearBook , deleteBook } from '../../actions';\n\n/*------- redux form --------*/\nimport { Field, reduxForm } from 'redux-form';\n\n\nclass EditBook extends PureComponent {\n\n    state = {\n        formData : {\n            bookImage : '',\n            isBookSelected : false\n        },\n        isFormChanged : null\n    }\n\n    \n\n    deletePost = () => {\n        let book = this.props.book;\n       \n        const length = Object.entries(book).length;\n        let image = ''\n        if( length === 0 || book.book === null){\n          return\n        }else{\n           // console.log(book.book.bookImage);\n            image = book.book.bookImage;\n        }\n        this.props.dispatch(deleteBook(this.props.match.params.id,image))\n        window.scrollTo(0, 0);\n    }\n\n    redirectUser = () => {\n        setTimeout (()=>{\n            this.props.history.push('/user/user-reviews')\n        },1000)\n    }\n\n    componentWillMount(){\n        //console.log(this.state.isFormChanged)\n        this.props.dispatch(getBook(this.props.match.params.id))\n    }\n\n    componentWillUnmount(){\n        this.props.dispatch(clearBook())\n    }\n\n    \n    componentWillReciveProps(nextProps) {\n\n        console.log(this.props);\n        console.log(nextProps);\n\n        /*\n        let book = this.props.book;\n        console.log(book);\n        const length = Object.entries(book).length;\n        let image = ''\n        if( length == 0 || book.book == null){\n          console.log('err');\n        }else{\n            console.log(book.book.bookImage);\n            if(this.state.isBookSelected)\n            image = book.book.bookImage;\n            this.setState({\n                formData : {\n                    bookImage : image\n                }\n            })\n        }\n        */\n    }\n    \n    \n  \n   \n\n    //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n/*------- renderInputField  --------*/\n    renderInputField(field){\n  \n    //    console.log(field)\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return (\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input type=\"text\" {...field.input}   onChange = {field.input.onChange}  />\n                <div className=\"error\">\n                    {field.meta.touched? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n\n/*------- renderFileInputField  --------*/\nhandleFileChange = (event) => {\n     if(event.target.files.length === 1){ \n        this.setState({\n           formData : {\n                bookImage : event.target.files[0].name,\n                isBookSelected : true\n            } \n        })\n     } \n}\n\nrenderFileInputField(field){\n    const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n    return (\n        <div className={className}>\n            <label>{field.myLabel}</label>\n            <input \n            type=\"file\"   \n            onChange = {field.input.onChange} \n           \n            />\n            <div className=\"error\">\n                {field.meta.touched ? field.meta.error:''}\n            </div>\n        </div>\n    )\n}\n/*------- renderTextareaField  --------*/\n    renderTextareaField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <textarea \n                    {...field.input}\n                ></textarea>\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderTextareaField  --------*/\n    renderNumberInputField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input \n                type=\"number\" \n                {...field.input}   \n                onChange = {field.input.onChange} \n                />\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n    \n\n    /*------- renderSelectField  --------*/\n\n    handleSelectChange = (event) => {\n        console.log(event.target.value)\n    }\n\n    renderSelectField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n\n                \n               <select  {...field.input}   onChange = {field.input.onChange}  >\n                    {field.children}\n               </select>\n\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    submitForm = (values) => {\n\n        if(this.props.initialValues != null && values != null){\n           if( JSON.stringify(this.props.initialValues) === JSON.stringify(values) ){\n            this.setState({\n                isFormChanged : false\n             }) \n             window.scrollTo(0, 0);\n             return           \n             //console.log('f')\n           }else{\n             this.setState({\n                isFormChanged : true\n             })\n             window.scrollTo(0, 0);\n             //console.log('t')\n           }\n        }\n        \n\n       // console.log(values.bookImage)\n\n    \n        if(this.state.formData.isBookSelected && typeof values.bookImage !== 'string' && values.bookImage !== null ){\n            this.props.dispatch(updateBook_with_image(values))  \n        }else{\n          //  console.log(values)\n            this.props.dispatch(updateBook_without_image(values))              \n        } \n      \n    }\n\n    render() {\n\n        let book = this.props.book;\n       \n        const length = Object.entries(book).length;\n       // console.log(this.state.formData);\n       // console.log(this.state.isFormChanged)\n        return (\n                    <div className=\"Form\">\n                        <div className=\"top\">\n                            <h3>Edit Review</h3>\n                            <Link to=\"/\">Back</Link>\n                        </div>\n\n                        {\n                            book.updateBook ? \n                                <div className=\"edit_confirm\">\n                                    post updated, \n                                    <Link to={`/books/${book.book._id}`}>\n                                        click here to see post \n                                    </Link>\n                                </div>\n                            : null\n                        }\n                        {\n                            book.postDeleted ? \n                            <div className=\"red_tag\">Post Deleted\n                                {this.redirectUser()}\n                            </div>\n                            :null\n                        }\n                         {\n                            !this.state.isFormChanged && this.state.isFormChanged !== null? \n                            <div className=\"edit_confirm\">\n                            Please Make Some Changes.\n                            </div>\n                            :\n                            null\n                        }\n              \n                        <form onSubmit={this.props.handleSubmit((event)=>this.submitForm(event))} method=\"POST\" encType=\"multipart/form-data\">\n\n                            <Field\n                                myLabel=\"Enter Name\"\n                                name=\"name\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Author\"\n                                name=\"author\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Review\"\n                                name=\"review\"\n                                component={this.renderTextareaField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Pages\"\n                                name=\"pages\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Price\"\n                                name=\"price\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Select Rating\"                    \n                                name=\"rating\"\n                                component={this.renderSelectField}>\n                                <option></option>\n                                <option value='1'>1</option>\n                                <option value='2'>2</option>\n                                <option value='3'>3</option>\n                                <option value='4'>4</option>\n                                <option value='5'>5</option>\n                            </Field>\n                            <Field \n                            myLabel=\"Select Book Image\"                                        \n                            name=\"bookImage\"\n                            value={this.state.formData.bookImage}                      \n                            type=\"file\"\n                            onChange={this.handleFileChange}\n                            component={this.renderFileInputField}\n                            />\n                            {\n                                length === 0 || book.book === null ? null :\n                                <div className=\"br_image\">\n                                    <img src={`${book.book.bookImage}`} alt='product'/>\n                                </div>\n                            }\n                          \n                          <div className=\"delete_post\">\n                                <button type=\"submit\">Edit  Review</button>\n                        </div>\n                            \n                            <div className=\"delete_post\">\n                                        <div className=\"button\"\n                                            onClick={() => this.deletePost()}\n                                        >\n                                            Delete Review\n                                        </div>\n                            </div>\n\n                        </form>\n                    </div>\n              )\n    }\n}\n\n\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values){\n    // console.log(values)\n     const errors = {};\n \n     if(!values.name){\n         errors.name = \"The name is empty\"\n     }\n \n     if(!values.author){\n         errors.author = \"The author is empty\"\n     }\n \n     if(!values.review){\n         errors.review = \"The review is empty\"\n     }\n \n     if(!values.pages){\n         errors.pages = \"The pages is empty\"\n     }\n \n     if(!values.price){\n         errors.price = \"The price is empty\"\n     }\n \n     if(!values.rating){\n         errors.rating = \"The rating is empty\"\n     }\n /*\n     if(values.bookImage){\n \n         if(values.bookImage.length != 0){\n             if(values.bookImage[0].size > 200000){\n                 errors.bookImage = \"The bookImage size must be less then 200kb\"\n             }\n         }\n     }\n */\n     \n \n     if(!values.bookImage || values.bookImage.length === 0 || values.bookImage === null){\n         errors.bookImage = \"The bookImage is empty\"\n     }\n \n     return errors;\n }\n\n\n  /*\n    componentWillReceiveProps(nextProps){\n        const length = Object.entries(nextProps.book).length;\n        \n        if(length != 0){\n            const book = nextProps.book.book;\n            console.log(book)\n            this.setState({\n                formData : {\n                    bookImage : book.bookImage,\n                    isBookSelected : false\n                }\n            })\n        }\n       \n    }\n    */\n     /*------- it returns messages when action is called and state going to change  --------*/\n \n function mapStateToProps(state){\n   \n\n    const books = state.books\n    let book_value = {}\n    const length = Object.entries(books).length;\n    if( length !== 0 && typeof(books.book) === \"object\" && books.book !== null ){\n        const book = state.books.book\n        book_value =  {\n            _id : book._id,\n            name : book.name,\n            author : book.author,\n            review : book.review,\n            pages : book.pages,\n            rating : book.rating,\n            price : book.price,\n            bookImage : book.bookImage\n        }\n    }\n    \n     return {\n         book: state.books,\n         initialValues : book_value,\n     }\n }\n \n     /*------- reduxForm : connects redux-form with react form   --------*/\n /*\n\n export default reduxForm({\n     validate,\n     form:'EditReview',\n })(\n     connect(mapStateToProps,{ getBook , updateBook , clearBook , deleteBook  })(EditBook)\n )\n*/\n\n export default connect( mapStateToProps, { getBook , updateBook_with_image , updateBook_without_image  , clearBook , deleteBook  })(\n    reduxForm({\n        validate,\n        form: 'EditReview',\n        enableReinitialize : true,\n    })(EditBook)\n );","   /**\n    * userPosts : all reviews related to login user \n    * My Reviews page\n    * \n    */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getUserPosts } from '../../actions';\nimport moment from 'moment-js'; \nimport { Link } from 'react-router-dom';\n\n\n\n\nclass UserPosts extends Component {\n\ncomponentWillMount(){\n    this.props.dispatch(getUserPosts(this.props.user.login.id))\n}\n\nshowUserPosts = (user) => (\n    user.userPosts ?   \n        user.userPosts.map(item => (\n            <tr key={item._id}>\n                <td>\n                    <Link to={`/user/edit-post/${item._id}`}>{item.name}</Link>\n                </td>\n                <td>{item.author}</td>\n                <td>{ moment(item.createAt).format(\"MM/DD/YY\") }</td>\n            </tr>\n        ))\n    : null\n)\n    render() {\n        let user = this.props.user;\n\n\n        return (\n            <div className=\"user_posts\">\n            <h4>Your Reviews:</h4>\n               <table>\n                   <thead>\n                       <tr>\n                           <th>Name</th>\n                           <th>Author</th>\n                           <th>Date</th>\n                       </tr>\n                   </thead>\n                   <tbody>\n                       {this.showUserPosts(user)}\n                   </tbody>\n               </table>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state){\n    return{\n        user : state.user\n    }\n}\n\n\nexport default connect(mapStateToProps)(UserPosts)","/**\n * Add.js : add new user page \n * \n */\nimport React, { PureComponent } from 'react';\nimport {  connect } from 'react-redux';\nimport { getUsers , userRegister } from '../../actions';\n\nclass Register extends PureComponent {\n\n    state = {\n        name : '',\n        lastname : '',\n        email : '',\n        password : '',\n        error : ''\n    }\n\n    componentWillMount(){\n        this.props.dispatch(getUsers())\n    }\n\n    handleInputName = (event) => {\n        this.setState({name:event.target.value})\n    }\n\n    handleInputLastName = (event) => {\n        this.setState({lastname:event.target.value})\n\n    }\n\n    handleInputEmail = (event) => {\n            this.setState({email:event.target.value})\n    }\n\n    handleInputPassword = (event) => {\n        this.setState({password:event.target.value})\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.user.register === false){\n            this.setState({\n                error : 'Error,try again.'\n            })\n        }else{\n            this.setState({\n                name : '',\n                lastname : '',\n                email : '',\n                password : '',\n            })\n        }\n    }\n\n    submitForm = (event) => {\n        event.preventDefault();\n        this.setState({error:''})\n        this.props.dispatch(userRegister({\n            email : this.state.email,\n            password : this.state.password,\n            name : this.state.name,\n            lastname : this.state.lastname\n        },this.props.user.users))\n    }\n\n    showUsers = (user) => (\n        user.users ? \n            user.users.map(item => (\n                <tr key={item._id}>\n                    <td>{item.name}</td>\n                    <td>{item.lastname}</td>\n                    <td>{item.email}</td>\n\n                </tr>\n            ))\n\n        :null\n    )\n\n    render() {\n        let user = this.props.user\n        return (\n            <div className=\"rl_container\">\n                <form onSubmit={this.submitForm}>\n                <h2>Add User</h2>\n                    <div className=\"form_element\">\n                        <input \n                            type = 'text'\n                            placeholder = 'Enter Name'\n                            value = {this.state.name}\n                            onChange = {this.handleInputName}\n\n                        />\n                    </div>\n\n                    <div className=\"form_element\">\n                        <input \n                            type = 'text'\n                            placeholder = 'Enter Lastname'\n                            value = {this.state.lastname}\n                            onChange = {this.handleInputLastName}\n                        />\n                    </div>\n                    <div className=\"form_element\">\n                        <input \n                            type = 'email'\n                            placeholder = 'Enter Email'\n                            value = {this.state.email}\n                            onChange = {this.handleInputEmail}\n                        />\n                    </div>\n                    <div className=\"form_element\">\n                        <input \n                            type = 'password'\n                            placeholder = 'Enter Password'\n                            value = {this.state.password}\n                            onChange = {this.handleInputPassword}\n                        />\n                    </div>\n                    <button type='submit'>Add User</button>\n\n                    <div className='error'>\n                        {this.state.error}\n                    </div>\n\n                </form>\n                <div className=\"current_users\">\n                    <h4>Current Users:</h4>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Lastname</th>\n                                <th>Email</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.showUsers(user)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state){\n    return{\n        user : state.user\n    }\n}\n\nexport default connect(mapStateToProps)(Register) ","   /**\n    * logout : component for logout\n    */\nimport React from 'react';\nimport axios from 'axios';\n\n\nconst Logout = (props) => {\n\n    let request = axios.get(`/api/logout`)\n                    .then(request => {\n                            setTimeout(() => {\n                               props.history.push('/') \n                            }, 2000);\n                    })\n    return (\n        <div className=\"logout_container\">\n            <h1>\n                Sorry to see you go :( \n            </h1> \n        </div>\n    );\n};\n\nexport default Logout;","import React from 'react';\nimport  { Switch , Route  } from 'react-router-dom';\nimport Home from './components/Home/home';\nimport BookView from './components/BookView/book_view';\nimport Login from './containers/Admin/login';\nimport Layout from './hoc/Layout/layout';\nimport Auth from './hoc/Auth/auth';\nimport User from './components/Admin/user';\nimport AddBook from './containers/Admin/add';\nimport EditReview from './containers/Admin/edit';\nimport UserPosts from './components/Admin/userPosts';\nimport Register  from './containers/Admin/register';\nimport Logout from './components/Admin/logout';\n\nconst Routes = () => {\n    return (\n        <Layout>\n            <Switch>\n                <Route path=\"/login\" exact component={ Auth(Login,false) } />\n                <Route path=\"/user/logout\" exact component={ Auth(Logout,true) } />\n                <Route path=\"/user/add\" exact component={ Auth(AddBook,true) } />\n                <Route path=\"/user/register\" exact component={ Auth(Register,true) } />\n                <Route path=\"/user/edit-post/:id\" exact component={ Auth(EditReview,true) } />\n                <Route path=\"/user\" exact component={ Auth(User,true) } />\n                <Route path=\"/user/user-reviews\" exact component={ Auth(UserPosts,true) } />\n                <Route path=\"/\" exact component={ Auth(Home,null) } />\n                <Route path=\"/books/:id\" exact component={ Auth(BookView,null) } />\n            </Switch>\n        </Layout>\n       \n    );\n};\n\nexport default Routes;","/**\n * userReducer : it containe all reducers related to user\n * \n */\n\nexport default function(state={},action){\n    switch(action.type){\n        case 'USER_LOGIN':\n            return {...state,login:action.payload}\n        case 'USER_AUTH' : \n        return {...state,login:action.payload}\n        case 'GET_USER_POSTS' : \n        return {...state,userPosts:action.payload}\n        case 'GET_USER':\n        return{ ...state, users :action.payload}\n        case 'USER_REGISTER':\n        return{\n            ...state,\n            register : action.payload.success,\n            users : action.payload.users\n        }\n        default:\n            return state;\n    }\n}","/**\n * rootReducer : combine all reducers\n * \n */\nimport { combineReducers } from 'redux';\nimport books from './books_reducer';\nimport user from './user_reducer';\nimport { reducer as formReducer } from 'redux-form';\n\nconst rootReducer = combineReducers({\n  books,\n  user,\n  form : formReducer\n});\n\nexport default rootReducer;","/**\n * \n * books_reducer : which containe all reducers related to book\n *  \n */\nexport default function(state={},action){\n    switch(action.type){\n        case 'GET_BOOKS':\n            return { ...state,list:action.payload }\n        case 'GET_BOOK':\n            return{...state,book:action.payload}\n        case 'GET_BOOK_W_REVIEWER':\n            return {\n                ...state,\n                book : action.payload.book,\n                reviewer : action.payload.reviewer\n            }\n        case 'CLEAR_BOOK_W_REVIEWER':\n        return{\n            ...state,\n            book : action.payload.book,\n            reviewer : action.payload.reviewer\n        }\n        case 'ADD_BOOK':\n        return{\n            ...state, bookImage : action.payload\n        }\n        case 'ADD_BOOK_START' : \n        return{\n            ...state, bookImage : action.payload\n        }\n        case 'ADD_BOOK_ERROR' : \n        return{\n            ...state, bookImage : action.payload\n        }\n        case 'ADD_BOOK_SUCCESS' : \n        return{\n            ...state, bookImage : action.payload\n        }\n      \n        case 'CLEAR_NEWBOOK':\n        return{\n            ...state, newbook : action.payload\n        }\n        case 'UPDATE_BOOK_WITH_IMG':\n        return{\n            ...state,\n            updateBook : action.payload.success,\n            book:action.payload.doc\n        }\n        case 'UPDATE_BOOK_WITHOUT_IMG':\n            return{\n                ...state,\n                updateBook : action.payload.success,\n                book:action.payload.doc\n            }\n        case 'DELETE_BOOK':\n        return{\n            ...state,postDeleted : action.payload\n        }\n        case 'CLEAR_BOOK':\n        return{\n            ...state,\n            updateBook : action.payload.updateBook,\n            book : action.payload.book,\n            postDeleted : action.payload.postDeleted\n        }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport  { createStore , applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport Routes from './routes';\nimport reducers from './reducers';\nimport {firebase,storage} from './firebase-config.js'\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase'\n\nconst createStoreWithMiddleware =  applyMiddleware(promiseMiddleware,ReduxThunk.withExtraArgument({firebase,storage}))(createStore);\n\nReactDOM.render( \n    <Provider store={createStoreWithMiddleware( reducers )}>\n        <BrowserRouter>\n            <Routes />\n        </BrowserRouter>\n    </Provider>\n    ,\n    document.getElementById('root')\n);"],"sourceRoot":""}