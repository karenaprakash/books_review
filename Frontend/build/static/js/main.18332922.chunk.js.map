{"version":3,"sources":["actions/index.js","widgetsUI/book_item.js","containers/home_container.js","components/Home/home.js","components/BookView/book_view.js","containers/Admin/login.js","components/SideNavItems/sidenavitems.js","components/Sidenav/sidenav.js","components/Header/header.js","hoc/Layout/layout.js","hoc/Auth/auth.js","components/Admin/user.js","containers/Admin/add.js","containers/Admin/edit.js","components/Admin/userPosts.js","containers/Admin/register.js","components/Admin/logout.js","routes.js","reducers/user_reducer.js","reducers/index.js","reducers/books_reducer.js","index.js"],"names":["getBooks","limit","start","order","list","type","payload","axios","get","then","response","data","addBook","book","post","clearNewBook","getBook","id","updateBook_with_image","updateBook_without_image","deleteBook","delete","clearBook","updateBook","postDeleted","BookItem","item","to","_id","className","name","author","price","pages","rating","HomeContainer","renderItems","books","map","key","loadmore","count","props","length","dispatch","this","onClick","Component","connect","state","console","log","Home","BookView","renderBook","reviewer","lastname","src","bookImage","alt","review","request","ownerId","getBookWithReviewer","match","params","Login","email","password","error","success","handleInputEmail","event","setState","target","value","handleInputPassword","submitForm","e","preventDefault","loginUser","nextProps","user","login","isAuth","history","push","onSubmit","placeholder","onChange","message","onHideNav","items","icon","text","link","restricted","exclude","element","i","Nav","showNav","navStyle","background","maxWidth","Header","style","color","padding","cursor","Layout","children","ComposedClass","reload","AuthenticationCheck","loading","User","AddBook","isSubmited","handleFileChange","file","files","handleSelectChange","componentDidUpdate","Object","entries","newbook","postUploaded","reset","alert","field","meta","touched","myLabel","input","values","formData","FormData","append","newProps","handleSubmit","method","encType","Field","component","renderInputField","renderTextareaField","renderNumberInputField","renderSelectField","renderFileInputField","reduxForm","validate","errors","form","EditBook","isBookSelected","isFormChanged","deletePost","window","scrollTo","redirectUser","setTimeout","initialValues","JSON","stringify","PureComponent","book_value","enableReinitialize","UserPosts","showUserPosts","userPosts","moment","createAt","format","userId","Register","handleInputName","handleInputLastName","userList","users","userRegister","showUsers","register","Logout","Routes","path","exact","Auth","EditReview","rootReducer","combineReducers","action","doc","formReducer","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.18332922.chunk.js","sourcesContent":["/**\n *  actions : all actions which are used in this project\n */\nimport axios from 'axios';\n//getBooks : get all books\nexport function getBooks(\n    limit = 10,\n    start = 0,\n    order = 'asc',\n    list = ''\n\n){\n    const request = axios.get(`/api/getBooks?limit=${limit}&skip=${start}&order=${order}`)\n                    .then( response => {\n                        if(list){\n                            return [...list,...response.data]\n                        }else{\n                            return response.data\n                        }\n                    })\n\n\n    return{\n        type : 'GET_BOOKS',\n        payload : request \n    }\n}\n//getBookWithReviewer\nexport function getBookWithReviewer(id){\n  \n    const request = axios.get(`/api/getBook?id=${id}`)\n  \n    return (dispatch) => {\n        request.then(({data})=>{\n            let book = data;\n\n            axios.get(`/api/getReviewer?id=${book.ownerId}`)\n            .then(({data})=>{\n                let response = {\n                    book,\n                    reviewer : data\n                }\n                console.log(response)\n                dispatch({\n                    type : 'GET_BOOK_W_REVIEWER',\n                    payload : response \n                })\n            })\n\n            \n        })\n    }\n\n}\n//clearBookWithReviewer : clear book used when we go inside perticuler book and come outside  \nexport function clearBookWithReviewer(){\n        return{\n            type : 'CLEAR_BOOK_W_REVIEWER',\n            payload : {\n                book : {},\n                reviewer : {}\n            } \n        }\n}\n\n\n//addBook : add book action\nexport function addBook(book){\n    const request = axios.post('/api/book',book)\n                    .then(response => response.data);\n\n                    return{\n                        type : 'ADD_BOOK',\n                        payload : request\n                    }\n}\n//clearNewBook : clear new book in add review page \nexport function clearNewBook(){\n    return{\n        type : 'CLEAR_NEWBOOK',\n        payload : {}\n    }\n}\n\n//getUserPosts : get user's all post\nexport function getUserPosts(userId){\n    const request = axios.get(`/api/user_posts?id=${userId}`)\n                    .then(response => response.data)\n    return{\n        type : 'GET_USER_POSTS',\n        payload : request\n    }\n}\n\n//getBook \nexport function getBook(id){\n    const request = axios.get(`/api/getBook?id=${id}`)\n                    .then(response => response.data)    \n        return{\n            type : 'GET_BOOK',\n            payload : request\n        }\n}\n//updateBook_with_image\nexport function updateBook_with_image(data){\n    const request = axios.post(`/api/book_with_img_update`,data)\n                     .then(response => response.data)    \n    return{\n        type : 'UPDATE_BOOK_WITH_IMG',   \n        payload : request\n    }\n}\n\n//updateBook_without_image\nexport function updateBook_without_image(data){\n    const request = axios.post(`/api/book_without_img_update`,data)\n                     .then(response => response.data)    \n    return{\n        type : 'UPDATE_BOOK_WITHOUT_IMG',   \n        payload : request\n    }\n}\n//deleteBook\nexport function deleteBook(id){\n    const request = axios.delete(`/api/delete_book?id=${id}`)\n                    .then(response => response.data)\n\n                    return{\n                        type : 'DELETE_BOOK',   \n                        payload : request\n                    }\n\n}\n//clearBook\nexport function clearBook(){\n    return {\n        type : 'CLEAR_BOOK',\n        payload : {\n            book : null,\n            updateBook : false,\n            postDeleted : false\n        }\n    }\n}\n\n\n\n/*========== USER : actions related to user ============*/\n//loginUser : for login\nexport function loginUser({email,password}){\n    const request = axios.post(\"/api/login\",{email,password})\n                    .then(response => response.data )\n\n    return{\n        type : 'USER_LOGIN',\n        payload : request\n     }\n}\n//auth : for authentication\nexport function   auth(){\n   const request = axios.get('/api/auth')\n                    .then(response => response.data);\n\n    return {\n        type : 'USER_AUTH',\n        payload : request\n    }\n}\n//getUsers : get all users\nexport function getUsers(){\n    const request = axios.get('/api/users')\n                    .then(response => response.data)\n    return {\n        type : 'GET_USER',\n        payload : request\n    }\n\n}\n//userRegister : add new user\nexport function userRegister(user,userList){\n    const request = axios.post('/api/register',user)\n    \n\n    return (dispatch) => {\n        request.then(({data})=>{\n            let users = data.success ? [...userList,data.user] : userList\n            let response = {\n                success : data.success,\n                users \n            }\n\n            dispatch({\n                type : 'USER_REGISTER',\n                payload : response\n            })\n        })\n    }\n\n\n}","/**\n * BookItem : BookItem Page  * \n */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BookItem = (item) => {\n    return (\n        <Link to={`/books/${item._id}`} className='book_item'>\n            <div className=\"book_header\">\n                <h2>{item.name}</h2>\n            </div>\n            <div className='book_items'>\n                <div className='book_author'>\n                    {item.author}\n                </div>\n                <div className='book_bubble'>\n                    <strong>Price</strong> ${item.price}\n                </div>\n                <div className='book_bubble'>\n                    <strong>Pages</strong> {item.pages}\n                </div>\n                <div className='book_bubble rating'>\n                    <strong>Rating</strong> {item.rating}\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nexport default BookItem;","   /**\n    * home_container : component for home \n    * it is conected with redux store\n    * \n    */\n   import React, { Component } from 'react';\n    import { connect } from 'react-redux';\n    import { getBooks ,clearBook } from '../actions';\n    import BookItem from '../widgetsUI/book_item';\n\n\n    class HomeContainer extends Component {\n\n        componentWillMount(){\n            this.props.dispatch(getBooks(5,0,'desc'))\n        }\n\n    componentWillUnmount(){\n       // this.props.dispatch(clearBooks())\n    }\n    \n\n        renderItems = (books) => (\n            books.list ? \n            books.list.map(item => (\n                <BookItem {...item} key = { item._id } />\n            ))\n            : null\n        )\n\n        loadmore = () => {\n            const count = this.props.books.list.length;\n            this.props.dispatch(getBooks(5,count,'desc',this.props.books.list))\n        }\n\n        render() {\n            return (\n                <div>\n                    {this.renderItems(this.props.books)}\n                    <div className='loadmore'\n                        onClick={this.loadmore}\n                    >Load More</div>\n                </div>\n            )\n        }\n    }\n\n    function mapStateToProps(state){\n        console.log(state)\n        return {\n            books : state.books\n        }\n\n    }\n\n    export default   connect(mapStateToProps)(HomeContainer);","/**\n* home page\n* \n*/\n    import React from 'react';\n    import HomeContainer from '../../containers/home_container';    \n\n    const Home = () => {\n        return (\n            <div>\n                <HomeContainer /> \n            </div>\n        );\n    };\n    \n    export default Home;","   /**\n    * book_view : only perticuler book view component \n    * http://localhost:3000/books/id\n    * \n    */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getBookWithReviewer , clearBookWithReviewer } from '../../actions';\n\n class BookView extends Component {\n\n\n    componentWillMount () {\n        this.props.dispatch(getBookWithReviewer(this.props.match.params.id))\n    }\n\n    componentWillUnmount () {\n        this.props.dispatch(clearBookWithReviewer())\n    }\n\n    renderBook = (books) => (\n        books.book ? \n        <div\n            className='br_container'\n         >\n         <div className=\"br_header\">\n            <h2>{books.book.name}</h2>\n            <h5>{books.book.author}</h5>\n            <div className=\"br_reviewer\">\n                <span>Review By:</span> { books.reviewer.name } {books.reviewer.lastname}\n            </div>\n            <div className=\"br_image\">\n                    <img src={`${books.book.bookImage}`} alt='book'/>\n            </div>\n         </div> \n         <div className=\"br_review\">\n            {books.book.review}\n         </div>\n         <div className=\"br_box\">\n            <div className=\"left\">\n                <div>\n                    <span>Pages:</span>{books.book.pages}\n                </div>\n                <div>\n                    <span>Price:</span> ${books.book.price}\n                </div>\n            </div>\n            <div className=\"right\">\n                <span>Rating</span>\n                <div>{books.book.rating}/5</div>\n            </div>\n         </div>\n         </div>\n        : \n        null\n    )\n\n    render() {\n        let books = this.props.books;\n        console.log(books)\n        return (\n            <div>\n                {this.renderBook(books)}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        books : state.books\n    }\n\n}\n\nexport default connect(mapStateToProps)(BookView);","/**\n * login.js : login page\n * \n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions';\n\nclass Login extends Component {\n  \n  \n    state = {\n        email: '',\n        password : '',\n        error : '',\n        success : false\n    }\n\n    \n    handleInputEmail = (event) =>{\n        this.setState({\n            email : event.target.value\n        })\n\n    }\n\n    handleInputPassword = (event) =>{\n        this.setState({\n            password : event.target.value\n        })\n    }\n\n    componentWillReceiveProps (nextProps) {\n        if(nextProps.user.login.isAuth){\n            this.props.history.push('/user')\n        }\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        this.props.dispatch(loginUser(this.state))\n    }\n\n    render() {\n\n        let user = this.props.user;\n        return (\n            <div className=\"rl_container\">\n                <form onSubmit={this.submitForm}>\n                    <h2>Login Here</h2>\n                    <div className=\"form_element\">\n                        <input\n                            type = \"email\"\n                            placeholder = \"Enter Your Email\"\n                            value = { this.state.email }\n                            onChange = {this.handleInputEmail}\n                        />\n                    </div>\n                    <div className=\"form_element\">\n                        <input\n                            type = \"password\"\n                            placeholder = \"Enter Your Password\"\n                            value = { this.state.password }\n                            onChange = {this.handleInputPassword}\n\n                        />\n                    </div>\n                    <button type=\"submit\">Login</button>\n                <div className=\"error\">\n                {\n                    user.login ? \n                    <div>{user.login.message}</div>\n                    :null\n                }\n                </div>               \n                </form>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps (state) {\n    return{\n        user : state.user\n    }\n}\n\nexport default connect(mapStateToProps)(Login);","   /**\n    * sidenavitems : items for side navbar\n    * \n    */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport { connect } from 'react-redux';\n\n\nconst SideNavItems = ({user,onHideNav}) => {\n\n    const items = [\n        {\n            type : 'navItem',\n            icon : 'home',\n            text : 'Home',\n            link : '/',\n            restricted : false\n        },\n        {\n            type : 'navItem',\n            icon : 'file-text-o',\n            text : 'My Profile',\n            link : '/user',\n            restricted : true\n        },\n        {\n            type : 'navItem',\n            icon : 'users',\n            text : 'Add Admins',\n            link : '/user/register',\n            restricted : true\n        },\n        {\n            type : 'navItem',\n            icon : 'sign-in',\n            text : 'Login',\n            link : '/login',\n            restricted : false,\n            exclude : true\n        }, {\n            type : 'navItem',\n            icon : 'plus',\n            text : 'Add Reviews',\n            link : '/user/add',\n            restricted : true\n        }, \n        {\n            type : 'navItem',\n            icon : 'star',\n            text : 'My Reviews',\n            link : '/user/user-reviews',\n            restricted : true\n        },\n        {\n            type : 'navItem',\n            icon : 'sign-out',\n            text : 'Logout',\n            link : '/user/logout',\n            restricted : true\n        }\n    ]\n\n    const element = (item,i) => (\n        <div key={i} className={item.type} onClick={onHideNav}>\n            <Link to={item.link}>\n                    <FontAwesome name={item.icon} />\n                    {item.text}\n            </Link>\n        </div> \n    )\n    \n    \n    const showItems = () => (\n        user.login ? \n        items.map((item,i)=>{\n            if(user.login.isAuth){\n                return !item.exclude ? element(item,i) : null\n            }else{\n                return !item.restricted ? element(item,i) : null\n            }\n        \n        }) : \n        null\n    )\n\n    return (\n        <div>\n            {showItems()}\n        </div>\n    );\n};\n\nfunction mapStateToProps(state){\n    return{\n        user : state.user\n    }\n}\n\nexport default connect(mapStateToProps)(SideNavItems);","/**\n * sidenav : side navbar\n * \n */\nimport React from 'react';\nimport SideNav from 'react-simple-sidenav';\nimport SideNavItems from '../SideNavItems/sidenavitems';\n\n\nconst Nav = (props) => {\n    return (\n      <SideNav\n        showNav = {props.showNav}\n        onHideNav = {props.onHideNav}\n        navStyle = {{\n            background : '#242424',\n            maxWidth : '220px'\n        }}\n      >\n          <SideNavItems onHideNav = {props.onHideNav} /> \n      </SideNav>\n    );\n};\n\nexport default Nav;","   /**\n    * Header.js : header component\n    *  \n    */\nimport React, { Component } from 'react'\nimport FontAwesome from 'react-fontawesome';\nimport  { Link } from 'react-router-dom';\nimport Nav from '../Sidenav/sidenav';\n\nclass Header extends Component {\n\n    state = {\n        showNav : false\n    }\n\n    onHideNav = () =>{\n        this.setState({\n            showNav : false\n        })\n    }\n\n    render() {\n        return (\n            <header>\n                <div className=\"open_nav\">\n\n                    <FontAwesome name=\"bars\"\n                       onClick= {()=>this.setState({showNav : true})}\n                        style={{\n                            color : '#ffffff',\n                            padding : '10px',\n                            cursor : 'pointer'\n                        }}\n                    />\n               </div>\n               <Nav\n                    showNav = {this.state.showNav}\n                    onHideNav = {()=> this.onHideNav()}\n               />\n                        <Link to='/' className='logo'>\n                        The Book's Reviews  \n                    </Link>\n              \n            </header>\n         )\n    }\n}\n\nexport default  Header;\n        ","/**\n * layout.js : Main layout component\n * \n */\nimport React from 'react';\nimport Header from '../.././components/Header/header';\n\n\nconst Layout = (props) => {\n    return (\n\n        <div>\n            <Header/>\n            <div>\n                 {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default Layout;","/**\n * auth.js : it handles user is authenticated or not\n * \n */\nimport React, { Component } from 'react';\nimport { auth } from '../../actions'\nimport { connect } from 'react-redux';\n\nexport default function(ComposedClass,reload){\n    class AuthenticationCheck extends Component{\n    \n        state = {\n            loading : true\n        }\n\n        componentWillMount () {\n            this.props.dispatch(auth())\n        }\n\n        componentWillReceiveProps (nextProps) {\n            this.setState({\n                loading : false\n            })\n\n            if(!nextProps.user.login.isAuth){\n                if(reload){\n                    this.props.history.push('/login')\n                }\n            }else{\n                if(reload === false){\n                    this.props.history.push('/user')\n                }\n            }\n        } \n    \n        render(){\n            if(this.state.loading){\n                return <div className=\"loader\"> Loading... </div>\n            }\n            return(\n               <ComposedClass {...this.props} user={this.props.user} />\n            )\n        }\n    }\n\n    function mapStateToProps(state){\n        return{\n            user: state.user\n        }\n    }\n    return connect(mapStateToProps)(AuthenticationCheck)\n}","   /**\n    * user.js : user profile page \n    * \n    */\nimport React from 'react';\n\nconst User = (props) => {\n  let user =   props.user.login;\n    return (\n        <div className=\"user_container\">\n            <div className=\"avatar\">\n                <img alt=\"avatar\" src=\"/images/avatar.png\" />\n            </div>\n            <div className=\"nfo\">\n                <div><span>Name:</span> {user.name}</div>\n                <div><span>Lastname:</span> {user.lastname}</div>\n                <div><span>Email:</span> {user.email}</div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default User;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { addBook , clearNewBook } from '../../actions'\n/*------- redux form --------*/\nimport { Field, reduxForm } from 'redux-form';\nimport {reset} from 'redux-form';\n\nclass AddBook extends Component {\n\n    state = {\n        bookImage : null,\n        isSubmited : false\n    }\n\n    //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n/*------- renderInputField  --------*/\n    renderInputField(field){\n       //    console.log(field)\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return (\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input type=\"text\" {...field.input}   onChange = {field.input.onChange}  />\n                <div className=\"error\">\n                    {field.meta.touched? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n\n/*------- renderFileInputField  --------*/\nhandleFileChange = (event) => {\n    console.log(this.state.bookImage)\n     if(event.target.file){\n        this.setState({\n            bookImage : event.target.files[0].name\n        })\n     } \n     \n}\n\nrenderFileInputField(field){\n    //const fileInputKey = field.input.value ? field.input.value.name : +new Date();  // key = {fileInputKey}\n    const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n    return (\n        <div className={className}>\n            <label>{field.myLabel}</label>\n            <input \n            type=\"file\"   \n            onChange = {field.input.onChange} \n           \n            />\n            <div className=\"error\">\n                {field.meta.touched ? field.meta.error:''}\n            </div>\n        </div>\n    )\n}\n/*------- renderTextareaField  --------*/\n    renderTextareaField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <textarea \n                    {...field.input}\n                ></textarea>\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderTextareaField  --------*/\n    renderNumberInputField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input \n                type=\"number\"  \n                {...field.input}   \n                onChange = {field.input.onChange} \n                />\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n    \n\n    /*------- renderSelectField  --------*/\n\n    handleSelectChange = (event) => {\n        console.log(event.target.value)\n    }\n\n    renderSelectField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n\n                \n               <select  {...field.input}   onChange = {field.input.onChange}  >\n                    {field.children}\n               </select>\n\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n/*------- onSubmit() : runs on submit  --------*/\n    onSubmit(values){\n        console.log(values)\n        let formData = new FormData();\n        formData.append('name', values.name)\n        formData.append('author', values.author)\n        formData.append('review', values.review)\n        formData.append('pages', values.pages)  \n        formData.append('price', values.price)  \n        formData.append('rating', values.rating)\n        formData.append( 'ownerId' , this.props.user.login.id )\n        if (typeof values.bookImage !== 'string' && values.bookImage !== null) {\n          formData.append('bookImage', values.bookImage[0]);\n          }\n        //  console.log(formData)\n          this.props.dispatch(addBook(\n            formData\n         ))\n         this.setState({\n             isSubmited : true\n         })\n    }\n\n    \n       \n    componentDidUpdate = () => {\n        console.log(this.props.data)\n        const length = Object.entries(this.props.data).length;\n        if(this.state.isSubmited){\n            if(  length != 0 ){\n                const length_of_newbook = Object.entries(this.props.data.newbook).length;\n                if(length_of_newbook != 0){\n                    const postUploaded = this.props.data.newbook.post ;\n                    if(postUploaded){\n                    this.setState({\n                        bookImage : 'uploaded'\n                    })\n                    //it clears the newdata : {post:true ,id: id} to newdata : { } .So, next time this code is not run\n                    this.props.dispatch(clearNewBook())\n                  \n                    //it resets the form \n                    this.props.dispatch(reset('AddBook'))\n\n                    alert('Record Saved Succesfully.')\n                    \n                    }else if(!postUploaded){\n                     alert('Error while storing record.')\n                    }\n                }\n            }\n        }\n        \n    }\n\n    componentWillReceiveProps(newProps){\n        console.log(this.props.data)\n    }\n\n    componentWillUnmount() {\n        this.props.dispatch(clearNewBook())\n    }\n    \n  \n    render(){\n\n        return(\n            <div className=\"Form\">\n                <div className=\"top\">\n                    <h3>Add a Review</h3>\n                    <Link to=\"/\">Back</Link>\n                </div>\n\n                <form onSubmit={this.props.handleSubmit((event)=>this.onSubmit(event))} method=\"POST\" encType=\"multipart/form-data\">\n\n                    <Field\n                        myLabel=\"Enter Name\"\n                        name=\"name\"\n                        component={this.renderInputField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter Author\"\n                        name=\"author\"\n                        component={this.renderInputField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter Review\"\n                        name=\"review\"\n                        component={this.renderTextareaField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter Pages\"\n                        name=\"pages\"\n                        component={this.renderNumberInputField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter Price\"\n                        name=\"price\"\n                        component={this.renderNumberInputField}\n                    />\n\n                    <Field\n                        myLabel=\"Select Rating\"                    \n                        name=\"rating\"\n                        \n                        component={this.renderSelectField}>\n                        <option></option>\n                        <option value='1'>1</option>\n                        <option value='2'>2</option>\n                        <option value='3'>3</option>\n                        <option value='4'>4</option>\n                        <option value='5'>5</option>\n                    </Field>\n \n                    <Field \n                    myLabel=\"Select Book Image\"                                        \n                    name=\"bookImage\"\n                    type=\"file\"\n                    onChange={this.handleFileChange}\n                    component={this.renderFileInputField}\n                    />\n\n                    <button type=\"submit\">Submit</button>\n\n                </form>\n            </div>\n        )\n    }\n}\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values){\n   // console.log(values)\n    const errors = {};\n\n    if(!values.name){\n        errors.name = \"The name is empty\"\n    }\n\n    if(!values.author){\n        errors.author = \"The author is empty\"\n    }\n\n    if(!values.review){\n        errors.review = \"The review is empty\"\n    }\n\n    if(!values.pages){\n        errors.pages = \"The pages is empty\"\n    }\n\n    if(!values.price){\n        errors.price = \"The price is empty\"\n    }\n\n    if(!values.rating){\n        errors.rating = \"The rating is empty\"\n    }\n/*\n    if(values.bookImage){\n\n        if(values.bookImage.length != 0){\n            if(values.bookImage[0].size > 200000){\n                errors.bookImage = \"The bookImage size must be less then 200kb\"\n            }\n        }\n    }\n*/\n    \n\n    if(!values.bookImage || values.bookImage.length == 0 ){\n        errors.bookImage = \"The bookImage is empty\"\n    }\n\n    \n\n    return errors;\n}\n    /*------- it returns messages when action is called and state going to change  --------*/\n\nfunction mapStateToProps(state){\n    console.log(state)\n    return {\n        data: state.books,\n    }\n}\n\n    /*------- reduxForm : connects redux-form with react form   --------*/\n\nexport default reduxForm({\n    validate,\n    form:'AddBook',\n})(\n    connect(mapStateToProps,{addBook,clearNewBook})(AddBook)\n)","/**\n * edit.js : edit review page\n * \n */\nimport React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { getBook , updateBook_with_image , updateBook_without_image , clearBook , deleteBook } from '../../actions';\n\n/*------- redux form --------*/\nimport { Field, reduxForm } from 'redux-form';\nimport book_view from '../../components/BookView/book_view';\n\n\nclass EditBook extends PureComponent {\n\n    state = {\n        formData : {\n            bookImage : '',\n            isBookSelected : false\n        },\n        isFormChanged : null\n    }\n\n    \n\n    deletePost = () => {\n        this.props.dispatch(deleteBook(this.props.match.params.id))\n        window.scrollTo(0, 0);\n    }\n\n    redirectUser = () => {\n        setTimeout (()=>{\n            this.props.history.push('/user/user-reviews')\n        },1000)\n    }\n\n    componentWillMount(){\n        console.log(this.state.isFormChanged)\n        this.props.dispatch(getBook(this.props.match.params.id))\n    }\n\n    componentWillUnmount(){\n        this.props.dispatch(clearBook())\n    }\n    \n  \n   \n\n    //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n/*------- renderInputField  --------*/\n    renderInputField(field){\n  \n    //    console.log(field)\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return (\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input type=\"text\" {...field.input}   onChange = {field.input.onChange}  />\n                <div className=\"error\">\n                    {field.meta.touched? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n\n/*------- renderFileInputField  --------*/\nhandleFileChange = (event) => {\n     if(event.target.files.length === 1){ \n        this.setState({\n           formData : {\n                bookImage : event.target.files[0].name,\n                isBookSelected : true\n            } \n        })\n     } \n}\n\nrenderFileInputField(field){\n    const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n    return (\n        <div className={className}>\n            <label>{field.myLabel}</label>\n            <input \n            type=\"file\"   \n            onChange = {field.input.onChange} \n           \n            />\n            <div className=\"error\">\n                {field.meta.touched ? field.meta.error:''}\n            </div>\n        </div>\n    )\n}\n/*------- renderTextareaField  --------*/\n    renderTextareaField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <textarea \n                    {...field.input}\n                ></textarea>\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderTextareaField  --------*/\n    renderNumberInputField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input \n                type=\"number\" \n                {...field.input}   \n                onChange = {field.input.onChange} \n                />\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n    \n\n    /*------- renderSelectField  --------*/\n\n    handleSelectChange = (event) => {\n        console.log(event.target.value)\n    }\n\n    renderSelectField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n\n                \n               <select  {...field.input}   onChange = {field.input.onChange}  >\n                    {field.children}\n               </select>\n\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    submitForm = (values) => {\n\n        if(this.props.initialValues != null && values != null){\n           if( JSON.stringify(this.props.initialValues) === JSON.stringify(values) ){\n            this.setState({\n                isFormChanged : false\n             }) \n             window.scrollTo(0, 0);\n             return           \n             //console.log('f')\n           }else{\n             this.setState({\n                isFormChanged : true\n             })\n             window.scrollTo(0, 0);\n             //console.log('t')\n           }\n        }\n        \n\n        console.log(values.bookImage)\n\n        let formData = new FormData();\n        formData.append('name', values.name)\n        formData.append('_id', this.props.match.params.id)\n        formData.append('author', values.author)\n        formData.append('review',  values.review)\n        formData.append('pages', values.pages)  \n        formData.append('price', values.price)  \n        formData.append('rating', values.rating)\n        formData.append( 'ownerId' , this.props.user.login.id )\n        if(this.state.formData.isBookSelected && typeof values.bookImage !== 'string' && values.bookImage !== null ){\n            formData.append('bookImage', values.bookImage[0]);\n            this.props.dispatch(updateBook_with_image(formData))  \n        }else{\n            console.log(values)\n            this.props.dispatch(updateBook_without_image(values))              \n        } \n      \n    }\n\n    render() {\n\n        let book = this.props.book;\n       \n        const length = Object.entries(book).length;\n     \n        console.log(this.state.isFormChanged)\n        return (\n                    <div className=\"Form\">\n                        <div className=\"top\">\n                            <h3>Edit Review</h3>\n                            <Link to=\"/\">Back</Link>\n                        </div>\n\n                        {\n                            book.updateBook ? \n                                <div className=\"edit_confirm\">\n                                    post updated, \n                                    <Link to={`/books/${book.book._id}`}>\n                                        click here to see post \n                                    </Link>\n                                </div>\n                            : null\n                        }\n                        {\n                            book.postDeleted ? \n                            <div className=\"red_tag\">Post Deleted\n                                {this.redirectUser()}\n                            </div>\n                            :null\n                        }\n                         {\n                            !this.state.isFormChanged && this.state.isFormChanged !== null? \n                            <div className=\"edit_confirm\">\n                            Please Make Some Changes.\n                            </div>\n                            :\n                            null\n                        }\n              \n                        <form onSubmit={this.props.handleSubmit((event)=>this.submitForm(event))} method=\"POST\" encType=\"multipart/form-data\">\n\n                            <Field\n                                myLabel=\"Enter Name\"\n                                name=\"name\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Author\"\n                                name=\"author\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Review\"\n                                name=\"review\"\n                                component={this.renderTextareaField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Pages\"\n                                name=\"pages\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Price\"\n                                name=\"price\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Select Rating\"                    \n                                name=\"rating\"\n                                component={this.renderSelectField}>\n                                <option></option>\n                                <option value='1'>1</option>\n                                <option value='2'>2</option>\n                                <option value='3'>3</option>\n                                <option value='4'>4</option>\n                                <option value='5'>5</option>\n                            </Field>\n                            <Field \n                            myLabel=\"Select Book Image\"                                        \n                            name=\"bookImage\"\n                            value={this.state.formData.bookImage}                      \n                            type=\"file\"\n                            onChange={this.handleFileChange}\n                            component={this.renderFileInputField}\n                            />\n                            {\n                                length == 0 || book.book == null ? null :\n                                <div className=\"br_image\">\n                                    <img src={`${book.book.bookImage}`} alt='product'/>\n                                </div>\n                            }\n                          \n                          <div className=\"delete_post\">\n                                <button type=\"submit\">Edit  Review</button>\n                        </div>\n                            \n                            <div className=\"delete_post\">\n                                        <div className=\"button\"\n                                            onClick={this.deletePost}\n                                        >\n                                            Delete Review\n                                        </div>\n                            </div>\n\n                        </form>\n                    </div>\n              )\n    }\n}\n\n\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values){\n    // console.log(values)\n     const errors = {};\n \n     if(!values.name){\n         errors.name = \"The name is empty\"\n     }\n \n     if(!values.author){\n         errors.author = \"The author is empty\"\n     }\n \n     if(!values.review){\n         errors.review = \"The review is empty\"\n     }\n \n     if(!values.pages){\n         errors.pages = \"The pages is empty\"\n     }\n \n     if(!values.price){\n         errors.price = \"The price is empty\"\n     }\n \n     if(!values.rating){\n         errors.rating = \"The rating is empty\"\n     }\n /*\n     if(values.bookImage){\n \n         if(values.bookImage.length != 0){\n             if(values.bookImage[0].size > 200000){\n                 errors.bookImage = \"The bookImage size must be less then 200kb\"\n             }\n         }\n     }\n */\n     \n \n     if(!values.bookImage || values.bookImage.length == 0 || values.bookImage ==null){\n         errors.bookImage = \"The bookImage is empty\"\n     }\n \n     return errors;\n }\n\n\n  /*\n    componentWillReceiveProps(nextProps){\n        const length = Object.entries(nextProps.book).length;\n        \n        if(length != 0){\n            const book = nextProps.book.book;\n            console.log(book)\n            this.setState({\n                formData : {\n                    bookImage : book.bookImage,\n                    isBookSelected : false\n                }\n            })\n        }\n       \n    }\n    */\n     /*------- it returns messages when action is called and state going to change  --------*/\n \n function mapStateToProps(state){\n   \n\n    const books = state.books\n    let book_value = {}\n    const length = Object.entries(books).length;\n    if( length != 0 && typeof(books.book) === \"object\" && books.book != null ){\n        const book = state.books.book\n        book_value =  {\n            _id : book._id,\n            name : book.name,\n            author : book.author,\n            review : book.review,\n            pages : book.pages,\n            rating : book.rating,\n            price : book.price,\n            bookImage : book.bookImage\n        }\n    }\n    \n     return {\n         book: state.books,\n         initialValues : book_value,\n     }\n }\n \n     /*------- reduxForm : connects redux-form with react form   --------*/\n /*\n\n export default reduxForm({\n     validate,\n     form:'EditReview',\n })(\n     connect(mapStateToProps,{ getBook , updateBook , clearBook , deleteBook  })(EditBook)\n )\n*/\n\n export default connect( mapStateToProps, { getBook , updateBook_with_image , updateBook_without_image  , clearBook , deleteBook  })(\n    reduxForm({\n        validate,\n        form: 'EditReview',\n        enableReinitialize : true,\n    })(EditBook)\n );","   /**\n    * userPosts : all reviews related to login user \n    * My Reviews page\n    * \n    */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getUserPosts } from '../../actions';\nimport moment from 'moment-js'; \nimport { Link } from 'react-router-dom';\n\n\n\n\nclass UserPosts extends Component {\n\ncomponentWillMount(){\n    this.props.dispatch(getUserPosts(this.props.user.login.id))\n}\n\nshowUserPosts = (user) => (\n    user.userPosts ?   \n        user.userPosts.map(item => (\n            <tr key={item._id}>\n                <td>\n                    <Link to={`/user/edit-post/${item._id}`}>{item.name}</Link>\n                </td>\n                <td>{item.author}</td>\n                <td>{ moment(item.createAt).format(\"MM/DD/YY\") }</td>\n            </tr>\n        ))\n    : null\n)\n    render() {\n        let user = this.props.user;\n\n\n        return (\n            <div className=\"user_posts\">\n            <h4>Your Reviews:</h4>\n               <table>\n                   <thead>\n                       <tr>\n                           <th>Name</th>\n                           <th>Author</th>\n                           <th>Date</th>\n                       </tr>\n                   </thead>\n                   <tbody>\n                       {this.showUserPosts(user)}\n                   </tbody>\n               </table>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state){\n    return{\n        user : state.user\n    }\n}\n\n\nexport default connect(mapStateToProps)(UserPosts)","/**\n * Add.js : add new user page \n * \n */\nimport React, { PureComponent } from 'react';\nimport {  connect } from 'react-redux';\nimport { getUsers , userRegister } from '../../actions';\n\nclass Register extends PureComponent {\n\n    state = {\n        name : '',\n        lastname : '',\n        email : '',\n        password : '',\n        error : ''\n    }\n\n    componentWillMount(){\n        this.props.dispatch(getUsers())\n    }\n\n    handleInputName = (event) => {\n        this.setState({name:event.target.value})\n    }\n\n    handleInputLastName = (event) => {\n        this.setState({lastname:event.target.value})\n\n    }\n\n    handleInputEmail = (event) => {\n            this.setState({email:event.target.value})\n    }\n\n    handleInputPassword = (event) => {\n        this.setState({password:event.target.value})\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.user.register === false){\n            this.setState({\n                error : 'Error,try again.'\n            })\n        }else{\n            this.setState({\n                name : '',\n                lastname : '',\n                email : '',\n                password : '',\n            })\n        }\n    }\n\n    submitForm = (event) => {\n        event.preventDefault();\n        this.setState({error:''})\n        this.props.dispatch(userRegister({\n            email : this.state.email,\n            password : this.state.password,\n            name : this.state.name,\n            lastname : this.state.lastname\n        },this.props.user.users))\n    }\n\n    showUsers = (user) => (\n        user.users ? \n            user.users.map(item => (\n                <tr key={item._id}>\n                    <td>{item.name}</td>\n                    <td>{item.lastname}</td>\n                    <td>{item.email}</td>\n\n                </tr>\n            ))\n\n        :null\n    )\n\n    render() {\n        let user = this.props.user\n        return (\n            <div className=\"rl_container\">\n                <form onSubmit={this.submitForm}>\n                <h2>Add User</h2>\n                    <div className=\"form_element\">\n                        <input \n                            type = 'text'\n                            placeholder = 'Enter Name'\n                            value = {this.state.name}\n                            onChange = {this.handleInputName}\n\n                        />\n                    </div>\n\n                    <div className=\"form_element\">\n                        <input \n                            type = 'text'\n                            placeholder = 'Enter Lastname'\n                            value = {this.state.lastname}\n                            onChange = {this.handleInputLastName}\n                        />\n                    </div>\n                    <div className=\"form_element\">\n                        <input \n                            type = 'email'\n                            placeholder = 'Enter Email'\n                            value = {this.state.email}\n                            onChange = {this.handleInputEmail}\n                        />\n                    </div>\n                    <div className=\"form_element\">\n                        <input \n                            type = 'password'\n                            placeholder = 'Enter Password'\n                            value = {this.state.password}\n                            onChange = {this.handleInputPassword}\n                        />\n                    </div>\n                    <button type='submit'>Add User</button>\n\n                    <div className='error'>\n                        {this.state.error}\n                    </div>\n\n                </form>\n                <div className=\"current_users\">\n                    <h4>Current Users:</h4>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Lastname</th>\n                                <th>Email</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.showUsers(user)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state){\n    return{\n        user : state.user\n    }\n}\n\nexport default connect(mapStateToProps)(Register) ","   /**\n    * logout : component for logout\n    */\nimport React from 'react';\nimport axios from 'axios';\n\n\nconst Logout = (props) => {\n\n    let request = axios.get(`/api/logout`)\n                    .then(request => {\n                            setTimeout(() => {\n                               props.history.push('/') \n                            }, 2000);\n                    })\n    return (\n        <div className=\"logout_container\">\n            <h1>\n                Sorry to see you go :( \n            </h1> \n        </div>\n    );\n};\n\nexport default Logout;","import React from 'react';\nimport  { Switch , Route  } from 'react-router-dom';\nimport Home from './components/Home/home';\nimport BookView from './components/BookView/book_view';\nimport Login from './containers/Admin/login';\nimport Layout from './hoc/Layout/layout';\nimport Auth from './hoc/Auth/auth';\nimport User from './components/Admin/user';\nimport AddBook from './containers/Admin/add';\nimport EditReview from './containers/Admin/edit';\nimport UserPosts from './components/Admin/userPosts';\nimport Register  from './containers/Admin/register';\nimport Logout from './components/Admin/logout';\n\nconst Routes = () => {\n    return (\n        <Layout>\n            <Switch>\n                <Route path=\"/login\" exact component={ Auth(Login,false) } />\n                <Route path=\"/user/logout\" exact component={ Auth(Logout,true) } />\n                <Route path=\"/user/add\" exact component={ Auth(AddBook,true) } />\n                <Route path=\"/user/register\" exact component={ Auth(Register,true) } />\n                <Route path=\"/user/edit-post/:id\" exact component={ Auth(EditReview,true) } />\n                <Route path=\"/user\" exact component={ Auth(User,true) } />\n                <Route path=\"/user/user-reviews\" exact component={ Auth(UserPosts,true) } />\n                <Route path=\"/\" exact component={ Auth(Home,null) } />\n                <Route path=\"/books/:id\" exact component={ Auth(BookView,null) } />\n            </Switch>\n        </Layout>\n       \n    );\n};\n\nexport default Routes;","/**\n * userReducer : it containe all reducers related to user\n * \n */\n\nexport default function(state={},action){\n    switch(action.type){\n        case 'USER_LOGIN':\n            return {...state,login:action.payload}\n        case 'USER_AUTH' : \n        return {...state,login:action.payload}\n        case 'GET_USER_POSTS' : \n        return {...state,userPosts:action.payload}\n        case 'GET_USER':\n        return{ ...state, users :action.payload}\n        case 'USER_REGISTER':\n        return{\n            ...state,\n            register : action.payload.success,\n            users : action.payload.users\n        }\n        default:\n            return state;\n    }\n}","/**\n * rootReducer : combine all reducers\n * \n */\nimport { combineReducers } from 'redux';\nimport books from './books_reducer';\nimport user from './user_reducer';\nimport { reducer as formReducer } from 'redux-form';\n\nconst rootReducer = combineReducers({\n  books,\n  user,\n  form : formReducer\n});\n\nexport default rootReducer;","/**\n * \n * books_reducer : which containe all reducers related to book\n *  \n */\nexport default function(state={},action){\n    switch(action.type){\n        case 'GET_BOOKS':\n            return { ...state,list:action.payload }\n        case 'GET_BOOK':\n            return{...state,book:action.payload}\n        case 'GET_BOOK_W_REVIEWER':\n            return {\n                ...state,\n                book : action.payload.book,\n                reviewer : action.payload.reviewer\n            }\n        case 'CLEAR_BOOK_W_REVIEWER':\n        return{\n            ...state,\n            book : action.payload.book,\n            reviewer : action.payload.reviewer\n        }\n        case 'ADD_BOOK':\n        return{\n            ...state,newbook : action.payload\n        }\n        case 'CLEAR_NEWBOOK':\n        return{\n            ...state, newbook : action.payload\n        }\n        case 'UPDATE_BOOK_WITH_IMG':\n        return{\n            ...state,\n            updateBook : action.payload.success,\n            book:action.payload.doc\n        }\n        case 'UPDATE_BOOK_WITHOUT_IMG':\n            return{\n                ...state,\n                updateBook : action.payload.success,\n                book:action.payload.doc\n            }\n        case 'DELETE_BOOK':\n        return{\n            ...state,postDeleted : action.payload\n        }\n        case 'CLEAR_BOOK':\n        return{\n            ...state,\n            updateBook : action.payload.updateBook,\n            book : action.payload.book,\n            postDeleted : action.payload.postDeleted\n        }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport  { createStore , applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport Routes from './routes';\nimport reducers from './reducers';\n\nconst createStoreWithMiddleware =  applyMiddleware(promiseMiddleware,ReduxThunk)(createStore);\n\nReactDOM.render( \n    <Provider store={createStoreWithMiddleware( reducers )}>\n        <BrowserRouter>\n            <Routes />\n        </BrowserRouter>\n    </Provider>\n    ,\n    document.getElementById('root')\n);"],"sourceRoot":""}