{"ast":null,"code":"/**\n *  actions : all actions which are used in this project\n */\nimport axios from 'axios'; //getBooks : get all books\n\nexport function getBooks(limit = 10, start = 0, order = 'asc', list = '') {\n  const request = axios.get(\"/api/getBooks?limit=\".concat(limit, \"&skip=\").concat(start, \"&order=\").concat(order)).then(response => {\n    if (list) {\n      return [...list, ...response.data];\n    } else {\n      return response.data;\n    }\n  });\n  return {\n    type: 'GET_BOOKS',\n    payload: request\n  };\n} //getBookWithReviewer\n\nexport function getBookWithReviewer(id) {\n  const request = axios.get(\"/api/getBook?id=\".concat(id));\n  return dispatch => {\n    request.then(({\n      data\n    }) => {\n      let book = data;\n      axios.get(\"/api/getReviewer?id=\".concat(book.ownerId)).then(({\n        data\n      }) => {\n        let response = {\n          book,\n          reviewer: data\n        };\n        console.log(response);\n        dispatch({\n          type: 'GET_BOOK_W_REVIEWER',\n          payload: response\n        });\n      });\n    });\n  };\n} //clearBookWithReviewer : clear book used when we go inside perticuler book and come outside  \n\nexport function clearBookWithReviewer() {\n  return {\n    type: 'CLEAR_BOOK_W_REVIEWER',\n    payload: {\n      book: {},\n      reviewer: {}\n    }\n  };\n} //addBook : add book action\n\nexport function addBook(book) {\n  const request = axios.post('/api/book', book).then(response => response.data);\n  return {\n    type: 'ADD_BOOK',\n    payload: request\n  };\n} //clearNewBook : clear new book in add review page \n\nexport function clearNewBook() {\n  return {\n    type: 'CLEAR_NEWBOOK',\n    payload: {}\n  };\n} //getUserPosts : get user's all post\n\nexport function getUserPosts(userId) {\n  const request = axios.get(\"/api/user_posts?id=\".concat(userId)).then(response => response.data);\n  return {\n    type: 'GET_USER_POSTS',\n    payload: request\n  };\n} //getBook \n\nexport function getBook(id) {\n  const request = axios.get(\"/api/getBook?id=\".concat(id)).then(response => response.data);\n  return {\n    type: 'GET_BOOK',\n    payload: request\n  };\n} //updateBook_with_image\n\nexport function updateBook_with_image(data) {\n  const request = axios.post(\"/api/book_with_img_update\", data).then(response => response.data);\n  return {\n    type: 'UPDATE_BOOK_WITH_IMG',\n    payload: request\n  };\n} //updateBook_without_image\n\nexport function updateBook_without_image(data) {\n  const request = axios.post(\"/api/book_without_img_update\", data).then(response => response.data);\n  return {\n    type: 'UPDATE_BOOK_WITHOUT_IMG',\n    payload: request\n  };\n} //deleteBook\n\nexport function deleteBook(id) {\n  const request = axios.delete(\"/api/delete_book?id=\".concat(id)).then(response => response.data);\n  return {\n    type: 'DELETE_BOOK',\n    payload: request\n  };\n} //clearBook\n\nexport function clearBook() {\n  return {\n    type: 'CLEAR_BOOK',\n    payload: {\n      book: null,\n      updateBook: false,\n      postDeleted: false\n    }\n  };\n}\n/*========== USER : actions related to user ============*/\n//loginUser : for login\n\nexport function loginUser({\n  email,\n  password\n}) {\n  const request = axios.post(\"/api/login\", {\n    email,\n    password\n  }).then(response => response.data);\n  return {\n    type: 'USER_LOGIN',\n    payload: request\n  };\n} //auth : for authentication\n\nexport function auth() {\n  const request = axios.get('/api/auth').then(response => response.data);\n  return {\n    type: 'USER_AUTH',\n    payload: request\n  };\n} //getUsers : get all users\n\nexport function getUsers() {\n  const request = axios.get('/api/users').then(response => response.data);\n  return {\n    type: 'GET_USER',\n    payload: request\n  };\n} //userRegister : add new user\n\nexport function userRegister(user, userList) {\n  const request = axios.post('/api/register', user);\n  return dispatch => {\n    request.then(({\n      data\n    }) => {\n      let users = data.success ? [...userList, data.user] : userList;\n      let response = {\n        success: data.success,\n        users\n      };\n      dispatch({\n        type: 'USER_REGISTER',\n        payload: response\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/rao/Desktop/Prakash-Rao Infotech/React/finalproject/project/book_reviews/client/src/actions/index.js"],"names":["axios","getBooks","limit","start","order","list","request","get","then","response","data","type","payload","getBookWithReviewer","id","dispatch","book","ownerId","reviewer","console","log","clearBookWithReviewer","addBook","post","clearNewBook","getUserPosts","userId","getBook","updateBook_with_image","updateBook_without_image","deleteBook","delete","clearBook","updateBook","postDeleted","loginUser","email","password","auth","getUsers","userRegister","user","userList","users","success"],"mappings":"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","sourcesContent":["/**\n *  actions : all actions which are used in this project\n */\nimport axios from 'axios';\n//getBooks : get all books\nexport function getBooks(\n    limit = 10,\n    start = 0,\n    order = 'asc',\n    list = ''\n\n){\n    const request = axios.get(`/api/getBooks?limit=${limit}&skip=${start}&order=${order}`)\n                    .then( response => {\n                        if(list){\n                            return [...list,...response.data]\n                        }else{\n                            return response.data\n                        }\n                    })\n\n\n    return{\n        type : 'GET_BOOKS',\n        payload : request \n    }\n}\n//getBookWithReviewer\nexport function getBookWithReviewer(id){\n  \n    const request = axios.get(`/api/getBook?id=${id}`)\n  \n    return (dispatch) => {\n        request.then(({data})=>{\n            let book = data;\n\n            axios.get(`/api/getReviewer?id=${book.ownerId}`)\n            .then(({data})=>{\n                let response = {\n                    book,\n                    reviewer : data\n                }\n                console.log(response)\n                dispatch({\n                    type : 'GET_BOOK_W_REVIEWER',\n                    payload : response \n                })\n            })\n\n            \n        })\n    }\n\n}\n//clearBookWithReviewer : clear book used when we go inside perticuler book and come outside  \nexport function clearBookWithReviewer(){\n        return{\n            type : 'CLEAR_BOOK_W_REVIEWER',\n            payload : {\n                book : {},\n                reviewer : {}\n            } \n        }\n}\n\n\n//addBook : add book action\nexport function addBook(book){\n    const request = axios.post('/api/book',book)\n                    .then(response => response.data);\n\n                    return{\n                        type : 'ADD_BOOK',\n                        payload : request\n                    }\n}\n//clearNewBook : clear new book in add review page \nexport function clearNewBook(){\n    return{\n        type : 'CLEAR_NEWBOOK',\n        payload : {}\n    }\n}\n\n//getUserPosts : get user's all post\nexport function getUserPosts(userId){\n    const request = axios.get(`/api/user_posts?id=${userId}`)\n                    .then(response => response.data)\n    return{\n        type : 'GET_USER_POSTS',\n        payload : request\n    }\n}\n\n//getBook \nexport function getBook(id){\n    const request = axios.get(`/api/getBook?id=${id}`)\n                    .then(response => response.data)    \n        return{\n            type : 'GET_BOOK',\n            payload : request\n        }\n}\n//updateBook_with_image\nexport function updateBook_with_image(data){\n    const request = axios.post(`/api/book_with_img_update`,data)\n                     .then(response => response.data)    \n    return{\n        type : 'UPDATE_BOOK_WITH_IMG',   \n        payload : request\n    }\n}\n\n//updateBook_without_image\nexport function updateBook_without_image(data){\n    const request = axios.post(`/api/book_without_img_update`,data)\n                     .then(response => response.data)    \n    return{\n        type : 'UPDATE_BOOK_WITHOUT_IMG',   \n        payload : request\n    }\n}\n//deleteBook\nexport function deleteBook(id){\n    const request = axios.delete(`/api/delete_book?id=${id}`)\n                    .then(response => response.data)\n\n                    return{\n                        type : 'DELETE_BOOK',   \n                        payload : request\n                    }\n\n}\n//clearBook\nexport function clearBook(){\n    return {\n        type : 'CLEAR_BOOK',\n        payload : {\n            book : null,\n            updateBook : false,\n            postDeleted : false\n        }\n    }\n}\n\n/*========== USER : actions related to user ============*/\n//loginUser : for login\nexport function loginUser({email,password}){\n    const request = axios.post(\"/api/login\",{email,password})\n                    .then(response => response.data )\n\n    return{\n        type : 'USER_LOGIN',\n        payload : request\n     }\n}\n//auth : for authentication\nexport function   auth(){\n   const request = axios.get('/api/auth')\n                    .then(response => response.data);\n\n    return {\n        type : 'USER_AUTH',\n        payload : request\n    }\n}\n//getUsers : get all users\nexport function getUsers(){\n    const request = axios.get('/api/users')\n                    .then(response => response.data)\n    return {\n        type : 'GET_USER',\n        payload : request\n    }\n\n}\n//userRegister : add new user\nexport function userRegister(user,userList){\n    const request = axios.post('/api/register',user)\n    \n\n    return (dispatch) => {\n        request.then(({data})=>{\n            let users = data.success ? [...userList,data.user] : userList\n            let response = {\n                success : data.success,\n                users \n            }\n\n            dispatch({\n                type : 'USER_REGISTER',\n                payload : response\n            })\n        })\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}