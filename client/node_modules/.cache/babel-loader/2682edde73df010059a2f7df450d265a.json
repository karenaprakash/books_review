{"ast":null,"code":"var _jsxFileName = \"/home/rao/Desktop/Prakash-Rao Infotech/React/finalproject/project/book_reviews/client/src/hoc/Auth/auth.js\";\n\n/**\n * auth.js : it handles user is authenticated or not\n * \n */\nimport React, { Component } from 'react';\nimport { auth } from '../../actions';\nimport { connect } from 'react-redux';\nexport default function (ComposedClass, reload) {\n  class AuthenticationCheck extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        loading: true\n      };\n    }\n\n    componentWillMount() {\n      this.props.dispatch(auth());\n    }\n\n    componentWillReceiveProps(nextProps) {\n      this.setState({\n        loading: false\n      });\n\n      if (!nextProps.user.login.isAuth) {\n        if (reload) {\n          this.props.history.push('/login');\n        }\n      } else {\n        if (reload === false) {\n          this.props.history.push('/user');\n        }\n      }\n    }\n\n    render() {\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          className: \"loader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \" Loading... \");\n      }\n\n      return React.createElement(ComposedClass, Object.assign({}, this.props, {\n        user: this.props.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  function mapStateToProps(state) {\n    return {\n      user: state.user\n    };\n  }\n\n  return connect(mapStateToProps)(AuthenticationCheck);\n}","map":{"version":3,"sources":["/home/rao/Desktop/Prakash-Rao Infotech/React/finalproject/project/book_reviews/client/src/hoc/Auth/auth.js"],"names":["React","Component","auth","connect","ComposedClass","reload","AuthenticationCheck","state","loading","componentWillMount","props","dispatch","componentWillReceiveProps","nextProps","setState","user","login","isAuth","history","push","render","mapStateToProps"],"mappings":";;AAAA;;;;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,eAAe,UAASC,aAAT,EAAuBC,MAAvB,EAA8B;AACzC,QAAMC,mBAAN,SAAkCL,SAAlC,CAA2C;AAAA;AAAA;AAAA,WAEvCM,KAFuC,GAE/B;AACJC,QAAAA,OAAO,EAAG;AADN,OAF+B;AAAA;;AAMvCC,IAAAA,kBAAkB,GAAI;AAClB,WAAKC,KAAL,CAAWC,QAAX,CAAoBT,IAAI,EAAxB;AACH;;AAEDU,IAAAA,yBAAyB,CAAEC,SAAF,EAAa;AAClC,WAAKC,QAAL,CAAc;AACVN,QAAAA,OAAO,EAAG;AADA,OAAd;;AAIA,UAAG,CAACK,SAAS,CAACE,IAAV,CAAeC,KAAf,CAAqBC,MAAzB,EAAgC;AAC5B,YAAGZ,MAAH,EAAU;AACN,eAAKK,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ,OAJD,MAIK;AACD,YAAGd,MAAM,KAAK,KAAd,EAAoB;AAChB,eAAKK,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACH;AACJ;AACJ;;AAEDC,IAAAA,MAAM,GAAE;AACJ,UAAG,KAAKb,KAAL,CAAWC,OAAd,EAAsB;AAClB,eAAO;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH;;AACD,aACG,oBAAC,aAAD,oBAAmB,KAAKE,KAAxB;AAA+B,QAAA,IAAI,EAAE,KAAKA,KAAL,CAAWK,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADH;AAGH;;AAjCsC;;AAoC3C,WAASM,eAAT,CAAyBd,KAAzB,EAA+B;AAC3B,WAAM;AACFQ,MAAAA,IAAI,EAAER,KAAK,CAACQ;AADV,KAAN;AAGH;;AACD,SAAOZ,OAAO,CAACkB,eAAD,CAAP,CAAyBf,mBAAzB,CAAP;AACH","sourcesContent":["/**\n * auth.js : it handles user is authenticated or not\n * \n */\nimport React, { Component } from 'react';\nimport { auth } from '../../actions'\nimport { connect } from 'react-redux';\n\nexport default function(ComposedClass,reload){\n    class AuthenticationCheck extends Component{\n    \n        state = {\n            loading : true\n        }\n\n        componentWillMount () {\n            this.props.dispatch(auth())\n        }\n\n        componentWillReceiveProps (nextProps) {\n            this.setState({\n                loading : false\n            })\n\n            if(!nextProps.user.login.isAuth){\n                if(reload){\n                    this.props.history.push('/login')\n                }\n            }else{\n                if(reload === false){\n                    this.props.history.push('/user')\n                }\n            }\n        } \n    \n        render(){\n            if(this.state.loading){\n                return <div className=\"loader\"> Loading... </div>\n            }\n            return(\n               <ComposedClass {...this.props} user={this.props.user} />\n            )\n        }\n    }\n\n    function mapStateToProps(state){\n        return{\n            user: state.user\n        }\n    }\n    return connect(mapStateToProps)(AuthenticationCheck)\n}"]},"metadata":{},"sourceType":"module"}