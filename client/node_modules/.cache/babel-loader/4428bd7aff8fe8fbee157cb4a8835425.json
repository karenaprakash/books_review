{"ast":null,"code":"var _jsxFileName = \"/home/rao/Desktop/Prakash-Rao Infotech/React/finalproject/project/book_reviews/client/src/containers/Admin/edit.js\";\n\n/**\n * edit.js : edit review page\n * \n */\nimport React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\n/*------- connect react with redux --------*/\n\nimport { connect } from 'react-redux';\n/*------- action which all data to data base --------*/\n\nimport { getBook, updateBook_with_image, updateBook_without_image, clearBook, deleteBook } from '../../actions';\n/*------- redux form --------*/\n\nimport { Field, reduxForm } from 'redux-form';\nimport book_view from '../../components/BookView/book_view';\n\nclass EditBook extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formData: {\n        bookImage: '',\n        isBookSelected: false\n      },\n      isFormChanged: null\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteBook(this.props.match.params.id));\n      window.scrollTo(0, 0);\n    };\n\n    this.redirectUser = () => {\n      setTimeout(() => {\n        this.props.history.push('/user/user-reviews');\n      }, 1000);\n    };\n\n    this.handleFileChange = event => {\n      if (event.target.files.length === 1) {\n        this.setState({\n          formData: {\n            bookImage: event.target.files[0].name,\n            isBookSelected: true\n          }\n        });\n      }\n    };\n\n    this.handleSelectChange = event => {\n      console.log(event.target.value);\n    };\n\n    this.submitForm = values => {\n      if (this.props.initialValues != null && values != null) {\n        if (JSON.stringify(this.props.initialValues) === JSON.stringify(values)) {\n          this.setState({\n            isFormChanged: false\n          });\n          window.scrollTo(0, 0);\n          return; //console.log('f')\n        } else {\n          this.setState({\n            isFormChanged: true\n          });\n          console.log('t');\n        }\n      }\n\n      let formData = new FormData();\n      formData.append('name', values.name);\n      formData.append('_id', this.props.match.params.id);\n      formData.append('author', values.author);\n      formData.append('review', values.review);\n      formData.append('pages', values.pages);\n      formData.append('price', values.price);\n      formData.append('rating', values.rating);\n      formData.append('ownerId', this.props.user.login.id);\n\n      if (this.state.formData.isBookSelected) {\n        if (typeof values.bookImage !== 'string' && values.bookImage !== null) {\n          formData.append('bookImage', values.bookImage[0]);\n        } else {}\n\n        this.props.dispatch(updateBook_with_image(formData));\n      } else {\n        console.log(values);\n        this.props.dispatch(updateBook_without_image(values));\n      }\n    };\n  }\n\n  componentWillMount() {\n    console.log(this.state.isFormChanged);\n    this.props.dispatch(getBook(this.props.match.params.id));\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearBook());\n  } //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n  /*------- renderInputField  --------*/\n\n\n  renderInputField(field) {\n    //    console.log(field)\n    const className = \"form-input \".concat(field.meta.touched && field.meta.error ? 'has-error' : '');\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, field.myLabel), React.createElement(\"input\", Object.assign({\n      type: \"text\"\n    }, field.input, {\n      onChange: field.input.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, field.meta.touched ? field.meta.error : ''));\n  }\n  /*------- renderFileInputField  --------*/\n\n\n  renderFileInputField(field) {\n    const className = \"form-input \".concat(field.meta.touched && field.meta.error ? 'has-error' : '');\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, field.myLabel), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: field.input.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, field.meta.touched ? field.meta.error : ''));\n  }\n  /*------- renderTextareaField  --------*/\n\n\n  renderTextareaField(field) {\n    const className = \"form-input \".concat(field.meta.touched && field.meta.error ? 'has-error' : '');\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, field.myLabel), React.createElement(\"textarea\", Object.assign({}, field.input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, field.meta.touched ? field.meta.error : ''));\n  }\n  /*------- renderTextareaField  --------*/\n\n\n  renderNumberInputField(field) {\n    const className = \"form-input \".concat(field.meta.touched && field.meta.error ? 'has-error' : '');\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, field.myLabel), React.createElement(\"input\", Object.assign({\n      type: \"number\"\n    }, field.input, {\n      onChange: field.input.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, field.meta.touched ? field.meta.error : ''));\n  }\n  /*------- renderSelectField  --------*/\n\n\n  renderSelectField(field) {\n    const className = \"form-input \".concat(field.meta.touched && field.meta.error ? 'has-error' : '');\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, field.myLabel), React.createElement(\"select\", Object.assign({}, field.input, {\n      onChange: field.input.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), field.children), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, field.meta.touched ? field.meta.error : ''));\n  }\n\n  render() {\n    let book = this.props.book;\n    const length = Object.entries(book).length;\n    console.log(this.state.isFormChanged);\n    return React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Edit Review\"), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Back\")), book.updateBook ? React.createElement(\"div\", {\n      className: \"edit_confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"post updated,\", React.createElement(Link, {\n      to: \"/books/\".concat(book.book._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"click here to see post\")) : null, book.postDeleted ? React.createElement(\"div\", {\n      className: \"red_tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Post Deleted\", this.redirectUser()) : null, !this.state.isFormChanged && this.state.isFormChanged !== null ? React.createElement(\"div\", {\n      className: \"edit_confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Please Make Some Changes.\") : null, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(event => this.submitForm(event)),\n      method: \"POST\",\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Field, {\n      myLabel: \"Enter Name\",\n      name: \"name\",\n      component: this.renderInputField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(Field, {\n      myLabel: \"Enter Author\",\n      name: \"author\",\n      component: this.renderInputField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(Field, {\n      myLabel: \"Enter Review\",\n      name: \"review\",\n      component: this.renderTextareaField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(Field, {\n      myLabel: \"Enter Pages\",\n      name: \"pages\",\n      component: this.renderNumberInputField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(Field, {\n      myLabel: \"Enter Price\",\n      name: \"price\",\n      component: this.renderNumberInputField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(Field, {\n      myLabel: \"Select Rating\",\n      name: \"rating\",\n      component: this.renderSelectField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"option\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"5\")), React.createElement(Field, {\n      myLabel: \"Select Book Image\",\n      name: \"bookImage\",\n      value: this.state.formData.bookImage,\n      type: \"file\",\n      onChange: this.handleFileChange,\n      component: this.renderFileInputField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), length == 0 || book.book == null ? null : React.createElement(\"div\", {\n      className: \"br_image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/images/\".concat(book.book.bookImage),\n      alt: \"product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"delete_post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Edit  Review\")), React.createElement(\"div\", {\n      className: \"delete_post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"button\",\n      onClick: this.deletePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Delete Review\"))));\n  }\n\n}\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values) {\n  // console.log(values)\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"The name is empty\";\n  }\n\n  if (!values.author) {\n    errors.author = \"The author is empty\";\n  }\n\n  if (!values.review) {\n    errors.review = \"The review is empty\";\n  }\n\n  if (!values.pages) {\n    errors.pages = \"The pages is empty\";\n  }\n\n  if (!values.price) {\n    errors.price = \"The price is empty\";\n  }\n\n  if (!values.rating) {\n    errors.rating = \"The rating is empty\";\n  }\n  /*\n      if(values.bookImage){\n  \n          if(values.bookImage.length != 0){\n              if(values.bookImage[0].size > 200000){\n                  errors.bookImage = \"The bookImage size must be less then 200kb\"\n              }\n          }\n      }\n  */\n\n\n  if (!values.bookImage || values.bookImage.length == 0 || values.bookImage == null) {\n    errors.bookImage = \"The bookImage is empty\";\n  }\n\n  return errors;\n}\n/*\n  componentWillReceiveProps(nextProps){\n      const length = Object.entries(nextProps.book).length;\n      \n      if(length != 0){\n          const book = nextProps.book.book;\n          console.log(book)\n          this.setState({\n              formData : {\n                  bookImage : book.bookImage,\n                  isBookSelected : false\n              }\n          })\n      }\n     \n  }\n  */\n\n/*------- it returns messages when action is called and state going to change  --------*/\n\n\nfunction mapStateToProps(state) {\n  const books = state.books;\n  let book_value = {};\n  const length = Object.entries(books).length;\n\n  if (length != 0 && typeof books.book === \"object\" && books.book != null) {\n    const book = state.books.book;\n    book_value = {\n      _id: book._id,\n      name: book.name,\n      author: book.author,\n      review: book.review,\n      pages: book.pages,\n      rating: book.rating,\n      price: book.price,\n      bookImage: book.bookImage\n    };\n  }\n\n  return {\n    book: state.books,\n    initialValues: book_value\n  };\n}\n/*------- reduxForm : connects redux-form with react form   --------*/\n\n/*\n export default reduxForm({\n    validate,\n    form:'EditReview',\n})(\n    connect(mapStateToProps,{ getBook , updateBook , clearBook , deleteBook  })(EditBook)\n)\n*/\n\n\nexport default connect(mapStateToProps, {\n  getBook,\n  updateBook_with_image,\n  updateBook_without_image,\n  clearBook,\n  deleteBook\n})(reduxForm({\n  validate,\n  form: 'EditReview',\n  enableReinitialize: true\n})(EditBook));","map":{"version":3,"sources":["/home/rao/Desktop/Prakash-Rao Infotech/React/finalproject/project/book_reviews/client/src/containers/Admin/edit.js"],"names":["React","PureComponent","Link","connect","getBook","updateBook_with_image","updateBook_without_image","clearBook","deleteBook","Field","reduxForm","book_view","EditBook","state","formData","bookImage","isBookSelected","isFormChanged","deletePost","props","dispatch","match","params","id","window","scrollTo","redirectUser","setTimeout","history","push","handleFileChange","event","target","files","length","setState","name","handleSelectChange","console","log","value","submitForm","values","initialValues","JSON","stringify","FormData","append","author","review","pages","price","rating","user","login","componentWillMount","componentWillUnmount","renderInputField","field","className","meta","touched","error","myLabel","input","onChange","renderFileInputField","renderTextareaField","renderNumberInputField","renderSelectField","children","render","book","Object","entries","updateBook","_id","postDeleted","handleSubmit","validate","errors","mapStateToProps","books","book_value","form","enableReinitialize"],"mappings":";;AAAA;;;;AAIA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA;;AACA,SAASC,OAAT,EAAmBC,qBAAnB,EAA2CC,wBAA3C,EAAsEC,SAAtE,EAAkFC,UAAlF,QAAoG,eAApG;AAEA;;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,qCAAtB;;AAGA,MAAMC,QAAN,SAAuBX,aAAvB,CAAqC;AAAA;AAAA;AAAA,SAEjCY,KAFiC,GAEzB;AACJC,MAAAA,QAAQ,EAAG;AACPC,QAAAA,SAAS,EAAG,EADL;AAEPC,QAAAA,cAAc,EAAG;AAFV,OADP;AAKJC,MAAAA,aAAa,EAAG;AALZ,KAFyB;;AAAA,SAYjCC,UAZiC,GAYpB,MAAM;AACf,WAAKC,KAAL,CAAWC,QAAX,CAAoBZ,UAAU,CAAC,KAAKW,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAA9B;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH,KAfgC;;AAAA,SAiBjCC,YAjBiC,GAiBlB,MAAM;AACjBC,MAAAA,UAAU,CAAE,MAAI;AACZ,aAAKR,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,oBAAxB;AACH,OAFS,EAER,IAFQ,CAAV;AAGH,KArBgC;;AAAA,SAuDrCC,gBAvDqC,GAuDjBC,KAAD,IAAW;AACzB,UAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,KAA8B,CAAjC,EAAmC;AAChC,aAAKC,QAAL,CAAc;AACXrB,UAAAA,QAAQ,EAAG;AACNC,YAAAA,SAAS,EAAGgB,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBG,IAD5B;AAENpB,YAAAA,cAAc,EAAG;AAFX;AADA,SAAd;AAMF;AACL,KAhEoC;;AAAA,SAuHjCqB,kBAvHiC,GAuHXN,KAAD,IAAW;AAC5BO,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACC,MAAN,CAAaQ,KAAzB;AACH,KAzHgC;;AAAA,SA6IjCC,UA7IiC,GA6InBC,MAAD,IAAY;AAErB,UAAG,KAAKvB,KAAL,CAAWwB,aAAX,IAA4B,IAA5B,IAAoCD,MAAM,IAAI,IAAjD,EAAsD;AACnD,YAAIE,IAAI,CAACC,SAAL,CAAe,KAAK1B,KAAL,CAAWwB,aAA1B,MAA6CC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAAjD,EAAyE;AACxE,eAAKP,QAAL,CAAc;AACVlB,YAAAA,aAAa,EAAG;AADN,WAAd;AAGCO,UAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,iBALuE,CAMvE;AACD,SAPD,MAOK;AACH,eAAKU,QAAL,CAAc;AACXlB,YAAAA,aAAa,EAAG;AADL,WAAd;AAGAqB,UAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD;AACH;;AAKD,UAAIzB,QAAQ,GAAG,IAAIgC,QAAJ,EAAf;AACAhC,MAAAA,QAAQ,CAACiC,MAAT,CAAgB,MAAhB,EAAwBL,MAAM,CAACN,IAA/B;AACAtB,MAAAA,QAAQ,CAACiC,MAAT,CAAgB,KAAhB,EAAuB,KAAK5B,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACAT,MAAAA,QAAQ,CAACiC,MAAT,CAAgB,QAAhB,EAA0BL,MAAM,CAACM,MAAjC;AACAlC,MAAAA,QAAQ,CAACiC,MAAT,CAAgB,QAAhB,EAA2BL,MAAM,CAACO,MAAlC;AACAnC,MAAAA,QAAQ,CAACiC,MAAT,CAAgB,OAAhB,EAAyBL,MAAM,CAACQ,KAAhC;AACApC,MAAAA,QAAQ,CAACiC,MAAT,CAAgB,OAAhB,EAAyBL,MAAM,CAACS,KAAhC;AACArC,MAAAA,QAAQ,CAACiC,MAAT,CAAgB,QAAhB,EAA0BL,MAAM,CAACU,MAAjC;AACAtC,MAAAA,QAAQ,CAACiC,MAAT,CAAiB,SAAjB,EAA6B,KAAK5B,KAAL,CAAWkC,IAAX,CAAgBC,KAAhB,CAAsB/B,EAAnD;;AACA,UAAG,KAAKV,KAAL,CAAWC,QAAX,CAAoBE,cAAvB,EAAsC;AAClC,YAAI,OAAO0B,MAAM,CAAC3B,SAAd,KAA4B,QAA5B,IAAwC2B,MAAM,CAAC3B,SAAP,KAAqB,IAAjE,EAAuE;AACnED,UAAAA,QAAQ,CAACiC,MAAT,CAAgB,WAAhB,EAA6BL,MAAM,CAAC3B,SAAP,CAAiB,CAAjB,CAA7B;AACH,SAFD,MAEK,CAEJ;;AACD,aAAKI,KAAL,CAAWC,QAAX,CAAoBf,qBAAqB,CAACS,QAAD,CAAzC;AACH,OAPD,MAOK;AACDwB,QAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACA,aAAKvB,KAAL,CAAWC,QAAX,CAAoBd,wBAAwB,CAACoC,MAAD,CAA5C;AACH;AAEJ,KAvLgC;AAAA;;AAuBjCa,EAAAA,kBAAkB,GAAE;AAChBjB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAL,CAAWI,aAAvB;AACA,SAAKE,KAAL,CAAWC,QAAX,CAAoBhB,OAAO,CAAC,KAAKe,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAA3B;AACH;;AAEDiC,EAAAA,oBAAoB,GAAE;AAClB,SAAKrC,KAAL,CAAWC,QAAX,CAAoBb,SAAS,EAA7B;AACH,GA9BgC,CAmCjC;;AAEJ;;;AACIkD,EAAAA,gBAAgB,CAACC,KAAD,EAAO;AAEvB;AACI,UAAMC,SAAS,wBAAiBD,KAAK,CAACE,IAAN,CAAWC,OAAX,IAAsBH,KAAK,CAACE,IAAN,CAAWE,KAAjC,GAAyC,WAAzC,GAAqD,EAAtE,CAAf;AACA,WACI;AAAK,MAAA,SAAS,EAAEH,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,KAAK,CAACK,OAAd,CADJ,EAEI;AAAO,MAAA,IAAI,EAAC;AAAZ,OAAuBL,KAAK,CAACM,KAA7B;AAAsC,MAAA,QAAQ,EAAIN,KAAK,CAACM,KAAN,CAAYC,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,KAAK,CAACE,IAAN,CAAWC,OAAX,GAAoBH,KAAK,CAACE,IAAN,CAAWE,KAA/B,GAAqC,EAD1C,CAHJ,CADJ;AASH;AAGL;;;AAYAI,EAAAA,oBAAoB,CAACR,KAAD,EAAO;AACvB,UAAMC,SAAS,wBAAiBD,KAAK,CAACE,IAAN,CAAWC,OAAX,IAAsBH,KAAK,CAACE,IAAN,CAAWE,KAAjC,GAAyC,WAAzC,GAAqD,EAAtE,CAAf;AACA,WACI;AAAK,MAAA,SAAS,EAAEH,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,KAAK,CAACK,OAAd,CADJ,EAEI;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,QAAQ,EAAIL,KAAK,CAACM,KAAN,CAAYC,QAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAOI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,KAAK,CAACE,IAAN,CAAWC,OAAX,GAAqBH,KAAK,CAACE,IAAN,CAAWE,KAAhC,GAAsC,EAD3C,CAPJ,CADJ;AAaH;AACD;;;AACIK,EAAAA,mBAAmB,CAACT,KAAD,EAAO;AACtB,UAAMC,SAAS,wBAAiBD,KAAK,CAACE,IAAN,CAAWC,OAAX,IAAsBH,KAAK,CAACE,IAAN,CAAWE,KAAjC,GAAyC,WAAzC,GAAqD,EAAtE,CAAf;AACA,WACI;AAAK,MAAA,SAAS,EAAEH,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,KAAK,CAACK,OAAd,CADJ,EAEI,kDACQL,KAAK,CAACM,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,EAKK;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIN,KAAK,CAACE,IAAN,CAAWC,OAAX,GAAqBH,KAAK,CAACE,IAAN,CAAWE,KAAhC,GAAsC,EAD1C,CALL,CADJ;AAWH;AAED;;;AACAM,EAAAA,sBAAsB,CAACV,KAAD,EAAO;AACzB,UAAMC,SAAS,wBAAiBD,KAAK,CAACE,IAAN,CAAWC,OAAX,IAAsBH,KAAK,CAACE,IAAN,CAAWE,KAAjC,GAAyC,WAAzC,GAAqD,EAAtE,CAAf;AACA,WACI;AAAK,MAAA,SAAS,EAAEH,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,KAAK,CAACK,OAAd,CADJ,EAEI;AACA,MAAA,IAAI,EAAC;AADL,OAEIL,KAAK,CAACM,KAFV;AAGA,MAAA,QAAQ,EAAIN,KAAK,CAACM,KAAN,CAAYC,QAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,EAOK;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIP,KAAK,CAACE,IAAN,CAAWC,OAAX,GAAqBH,KAAK,CAACE,IAAN,CAAWE,KAAhC,GAAsC,EAD1C,CAPL,CADJ;AAaH;AAGD;;;AAMAO,EAAAA,iBAAiB,CAACX,KAAD,EAAO;AACpB,UAAMC,SAAS,wBAAiBD,KAAK,CAACE,IAAN,CAAWC,OAAX,IAAsBH,KAAK,CAACE,IAAN,CAAWE,KAAjC,GAAyC,WAAzC,GAAqD,EAAtE,CAAf;AACA,WACI;AAAK,MAAA,SAAS,EAAEH,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,KAAK,CAACK,OAAd,CADJ,EAIG,gDAAaL,KAAK,CAACM,KAAnB;AAA4B,MAAA,QAAQ,EAAIN,KAAK,CAACM,KAAN,CAAYC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACMP,KAAK,CAACY,QADZ,CAJH,EAQK;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIZ,KAAK,CAACE,IAAN,CAAWC,OAAX,GAAqBH,KAAK,CAACE,IAAN,CAAWE,KAAhC,GAAsC,EAD1C,CARL,CADJ;AAcH;;AA8CDS,EAAAA,MAAM,GAAG;AAEL,QAAIC,IAAI,GAAG,KAAKrD,KAAL,CAAWqD,IAAtB;AAEA,UAAMtC,MAAM,GAAGuC,MAAM,CAACC,OAAP,CAAeF,IAAf,EAAqBtC,MAApC;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAL,CAAWI,aAAvB;AACA,WACY;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,EAOQuD,IAAI,CAACG,UAAL,GACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,mBAAYH,IAAI,CAACA,IAAL,CAAUI,GAAtB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,CADJ,GAOE,IAdV,EAiBQJ,IAAI,CAACK,WAAL,GACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACK,KAAKnD,YAAL,EADL,CADA,GAIC,IArBT,EAwBQ,CAAC,KAAKb,KAAL,CAAWI,aAAZ,IAA6B,KAAKJ,KAAL,CAAWI,aAAX,KAA6B,IAA1D,GACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADA,GAKA,IA7BR,EAgCI;AAAM,MAAA,QAAQ,EAAE,KAAKE,KAAL,CAAW2D,YAAX,CAAyB/C,KAAD,IAAS,KAAKU,UAAL,CAAgBV,KAAhB,CAAjC,CAAhB;AAA0E,MAAA,MAAM,EAAC,MAAjF;AAAwF,MAAA,OAAO,EAAC,qBAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AACI,MAAA,OAAO,EAAC,YADZ;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,SAAS,EAAE,KAAK0B,gBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAQI,oBAAC,KAAD;AACI,MAAA,OAAO,EAAC,cADZ;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,SAAS,EAAE,KAAKA,gBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAcI,oBAAC,KAAD;AACI,MAAA,OAAO,EAAC,cADZ;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,SAAS,EAAE,KAAKU,mBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,EAoBI,oBAAC,KAAD;AACI,MAAA,OAAO,EAAC,aADZ;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,SAAS,EAAE,KAAKC,sBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,EA0BI,oBAAC,KAAD;AACI,MAAA,OAAO,EAAC,aADZ;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,SAAS,EAAE,KAAKA,sBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BJ,EAgCI,oBAAC,KAAD;AACI,MAAA,OAAO,EAAC,eADZ;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,SAAS,EAAE,KAAKC,iBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,EAMI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANJ,EAOI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPJ,EAQI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARJ,EASI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATJ,CAhCJ,EA2CI,oBAAC,KAAD;AACA,MAAA,OAAO,EAAC,mBADR;AAEA,MAAA,IAAI,EAAC,WAFL;AAGA,MAAA,KAAK,EAAE,KAAKxD,KAAL,CAAWC,QAAX,CAAoBC,SAH3B;AAIA,MAAA,IAAI,EAAC,MAJL;AAKA,MAAA,QAAQ,EAAE,KAAKe,gBALf;AAMA,MAAA,SAAS,EAAE,KAAKoC,oBANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CJ,EAoDQhC,MAAM,IAAI,CAAV,IAAesC,IAAI,CAACA,IAAL,IAAa,IAA5B,GAAmC,IAAnC,GACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,oBAAaA,IAAI,CAACA,IAAL,CAAUzD,SAAvB,CAAR;AAA4C,MAAA,GAAG,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CArDR,EA0DE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADN,CA1DF,EA8DI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACY;AAAK,MAAA,SAAS,EAAC,QAAf;AACI,MAAA,OAAO,EAAE,KAAKG,UADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADZ,CA9DJ,CAhCJ,CADZ;AA0GH;;AA1SgC;AA8SrC;;;AAGA,SAAS6D,QAAT,CAAkBrC,MAAlB,EAAyB;AACrB;AACC,QAAMsC,MAAM,GAAG,EAAf;;AAEA,MAAG,CAACtC,MAAM,CAACN,IAAX,EAAgB;AACZ4C,IAAAA,MAAM,CAAC5C,IAAP,GAAc,mBAAd;AACH;;AAED,MAAG,CAACM,MAAM,CAACM,MAAX,EAAkB;AACdgC,IAAAA,MAAM,CAAChC,MAAP,GAAgB,qBAAhB;AACH;;AAED,MAAG,CAACN,MAAM,CAACO,MAAX,EAAkB;AACd+B,IAAAA,MAAM,CAAC/B,MAAP,GAAgB,qBAAhB;AACH;;AAED,MAAG,CAACP,MAAM,CAACQ,KAAX,EAAiB;AACb8B,IAAAA,MAAM,CAAC9B,KAAP,GAAe,oBAAf;AACH;;AAED,MAAG,CAACR,MAAM,CAACS,KAAX,EAAiB;AACb6B,IAAAA,MAAM,CAAC7B,KAAP,GAAe,oBAAf;AACH;;AAED,MAAG,CAACT,MAAM,CAACU,MAAX,EAAkB;AACd4B,IAAAA,MAAM,CAAC5B,MAAP,GAAgB,qBAAhB;AACH;AACL;;;;;;;;;;;;AAYI,MAAG,CAACV,MAAM,CAAC3B,SAAR,IAAqB2B,MAAM,CAAC3B,SAAP,CAAiBmB,MAAjB,IAA2B,CAAhD,IAAqDQ,MAAM,CAAC3B,SAAP,IAAmB,IAA3E,EAAgF;AAC5EiE,IAAAA,MAAM,CAACjE,SAAP,GAAmB,wBAAnB;AACH;;AAED,SAAOiE,MAAP;AACH;AAGA;;;;;;;;;;;;;;;;;;AAiBG;;;AAEJ,SAASC,eAAT,CAAyBpE,KAAzB,EAA+B;AAG5B,QAAMqE,KAAK,GAAGrE,KAAK,CAACqE,KAApB;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,QAAMjD,MAAM,GAAGuC,MAAM,CAACC,OAAP,CAAeQ,KAAf,EAAsBhD,MAArC;;AACA,MAAIA,MAAM,IAAI,CAAV,IAAe,OAAOgD,KAAK,CAACV,IAAb,KAAuB,QAAtC,IAAkDU,KAAK,CAACV,IAAN,IAAc,IAApE,EAA0E;AACtE,UAAMA,IAAI,GAAG3D,KAAK,CAACqE,KAAN,CAAYV,IAAzB;AACAW,IAAAA,UAAU,GAAI;AACVP,MAAAA,GAAG,EAAGJ,IAAI,CAACI,GADD;AAEVxC,MAAAA,IAAI,EAAGoC,IAAI,CAACpC,IAFF;AAGVY,MAAAA,MAAM,EAAGwB,IAAI,CAACxB,MAHJ;AAIVC,MAAAA,MAAM,EAAGuB,IAAI,CAACvB,MAJJ;AAKVC,MAAAA,KAAK,EAAGsB,IAAI,CAACtB,KALH;AAMVE,MAAAA,MAAM,EAAGoB,IAAI,CAACpB,MANJ;AAOVD,MAAAA,KAAK,EAAGqB,IAAI,CAACrB,KAPH;AAQVpC,MAAAA,SAAS,EAAGyD,IAAI,CAACzD;AARP,KAAd;AAUH;;AAEA,SAAO;AACHyD,IAAAA,IAAI,EAAE3D,KAAK,CAACqE,KADT;AAEHvC,IAAAA,aAAa,EAAGwC;AAFb,GAAP;AAIH;AAEG;;AACJ;;;;;;;;;;AAUA,eAAehF,OAAO,CAAE8E,eAAF,EAAmB;AAAE7E,EAAAA,OAAF;AAAYC,EAAAA,qBAAZ;AAAoCC,EAAAA,wBAApC;AAAgEC,EAAAA,SAAhE;AAA4EC,EAAAA;AAA5E,CAAnB,CAAP,CACZE,SAAS,CAAC;AACNqE,EAAAA,QADM;AAENK,EAAAA,IAAI,EAAE,YAFA;AAGNC,EAAAA,kBAAkB,EAAG;AAHf,CAAD,CAAT,CAIGzE,QAJH,CADY,CAAf","sourcesContent":["/**\n * edit.js : edit review page\n * \n */\nimport React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { getBook , updateBook_with_image , updateBook_without_image , clearBook , deleteBook } from '../../actions';\n\n/*------- redux form --------*/\nimport { Field, reduxForm } from 'redux-form';\nimport book_view from '../../components/BookView/book_view';\n\n\nclass EditBook extends PureComponent {\n\n    state = {\n        formData : {\n            bookImage : '',\n            isBookSelected : false\n        },\n        isFormChanged : null\n    }\n\n    \n\n    deletePost = () => {\n        this.props.dispatch(deleteBook(this.props.match.params.id))\n        window.scrollTo(0, 0);\n    }\n\n    redirectUser = () => {\n        setTimeout (()=>{\n            this.props.history.push('/user/user-reviews')\n        },1000)\n    }\n\n    componentWillMount(){\n        console.log(this.state.isFormChanged)\n        this.props.dispatch(getBook(this.props.match.params.id))\n    }\n\n    componentWillUnmount(){\n        this.props.dispatch(clearBook())\n    }\n    \n  \n   \n\n    //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n/*------- renderInputField  --------*/\n    renderInputField(field){\n  \n    //    console.log(field)\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return (\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input type=\"text\" {...field.input}   onChange = {field.input.onChange}  />\n                <div className=\"error\">\n                    {field.meta.touched? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n\n/*------- renderFileInputField  --------*/\nhandleFileChange = (event) => {\n     if(event.target.files.length === 1){ \n        this.setState({\n           formData : {\n                bookImage : event.target.files[0].name,\n                isBookSelected : true\n            } \n        })\n     } \n}\n\nrenderFileInputField(field){\n    const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n    return (\n        <div className={className}>\n            <label>{field.myLabel}</label>\n            <input \n            type=\"file\"   \n            onChange = {field.input.onChange} \n           \n            />\n            <div className=\"error\">\n                {field.meta.touched ? field.meta.error:''}\n            </div>\n        </div>\n    )\n}\n/*------- renderTextareaField  --------*/\n    renderTextareaField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <textarea \n                    {...field.input}\n                ></textarea>\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderTextareaField  --------*/\n    renderNumberInputField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input \n                type=\"number\" \n                {...field.input}   \n                onChange = {field.input.onChange} \n                />\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n    \n\n    /*------- renderSelectField  --------*/\n\n    handleSelectChange = (event) => {\n        console.log(event.target.value)\n    }\n\n    renderSelectField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n\n                \n               <select  {...field.input}   onChange = {field.input.onChange}  >\n                    {field.children}\n               </select>\n\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    submitForm = (values) => {\n\n        if(this.props.initialValues != null && values != null){\n           if( JSON.stringify(this.props.initialValues) === JSON.stringify(values) ){\n            this.setState({\n                isFormChanged : false\n             }) \n             window.scrollTo(0, 0);\n             return           \n             //console.log('f')\n           }else{\n             this.setState({\n                isFormChanged : true\n             })\n             console.log('t')\n           }\n        }\n        \n\n\n\n        let formData = new FormData();\n        formData.append('name', values.name)\n        formData.append('_id', this.props.match.params.id)\n        formData.append('author', values.author)\n        formData.append('review',  values.review)\n        formData.append('pages', values.pages)  \n        formData.append('price', values.price)  \n        formData.append('rating', values.rating)\n        formData.append( 'ownerId' , this.props.user.login.id )\n        if(this.state.formData.isBookSelected){\n            if (typeof values.bookImage !== 'string' && values.bookImage !== null) {\n                formData.append('bookImage', values.bookImage[0]);\n            }else{\n\n            }\n            this.props.dispatch(updateBook_with_image(formData))  \n        }else{\n            console.log(values)\n            this.props.dispatch(updateBook_without_image(values))              \n        } \n      \n    }\n\n    render() {\n\n        let book = this.props.book;\n       \n        const length = Object.entries(book).length;\n     \n        console.log(this.state.isFormChanged)\n        return (\n                    <div className=\"Form\">\n                        <div className=\"top\">\n                            <h3>Edit Review</h3>\n                            <Link to=\"/\">Back</Link>\n                        </div>\n\n                        {\n                            book.updateBook ? \n                                <div className=\"edit_confirm\">\n                                    post updated, \n                                    <Link to={`/books/${book.book._id}`}>\n                                        click here to see post \n                                    </Link>\n                                </div>\n                            : null\n                        }\n                        {\n                            book.postDeleted ? \n                            <div className=\"red_tag\">Post Deleted\n                                {this.redirectUser()}\n                            </div>\n                            :null\n                        }\n                         {\n                            !this.state.isFormChanged && this.state.isFormChanged !== null? \n                            <div className=\"edit_confirm\">\n                            Please Make Some Changes.\n                            </div>\n                            :\n                            null\n                        }\n              \n                        <form onSubmit={this.props.handleSubmit((event)=>this.submitForm(event))} method=\"POST\" encType=\"multipart/form-data\">\n\n                            <Field\n                                myLabel=\"Enter Name\"\n                                name=\"name\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Author\"\n                                name=\"author\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Review\"\n                                name=\"review\"\n                                component={this.renderTextareaField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Pages\"\n                                name=\"pages\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Price\"\n                                name=\"price\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Select Rating\"                    \n                                name=\"rating\"\n                                component={this.renderSelectField}>\n                                <option></option>\n                                <option value='1'>1</option>\n                                <option value='2'>2</option>\n                                <option value='3'>3</option>\n                                <option value='4'>4</option>\n                                <option value='5'>5</option>\n                            </Field>\n                            <Field \n                            myLabel=\"Select Book Image\"                                        \n                            name=\"bookImage\"\n                            value={this.state.formData.bookImage}                      \n                            type=\"file\"\n                            onChange={this.handleFileChange}\n                            component={this.renderFileInputField}\n                            />\n                            {\n                                length == 0 || book.book == null ? null :\n                                <div className=\"br_image\">\n                                    <img src={`/images/${book.book.bookImage}`} alt='product'/>\n                                </div>\n                            }\n                          \n                          <div className=\"delete_post\">\n                                <button type=\"submit\">Edit  Review</button>\n                        </div>\n                            \n                            <div className=\"delete_post\">\n                                        <div className=\"button\"\n                                            onClick={this.deletePost}\n                                        >\n                                            Delete Review\n                                        </div>\n                            </div>\n\n                        </form>\n                    </div>\n              )\n    }\n}\n\n\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values){\n    // console.log(values)\n     const errors = {};\n \n     if(!values.name){\n         errors.name = \"The name is empty\"\n     }\n \n     if(!values.author){\n         errors.author = \"The author is empty\"\n     }\n \n     if(!values.review){\n         errors.review = \"The review is empty\"\n     }\n \n     if(!values.pages){\n         errors.pages = \"The pages is empty\"\n     }\n \n     if(!values.price){\n         errors.price = \"The price is empty\"\n     }\n \n     if(!values.rating){\n         errors.rating = \"The rating is empty\"\n     }\n /*\n     if(values.bookImage){\n \n         if(values.bookImage.length != 0){\n             if(values.bookImage[0].size > 200000){\n                 errors.bookImage = \"The bookImage size must be less then 200kb\"\n             }\n         }\n     }\n */\n     \n \n     if(!values.bookImage || values.bookImage.length == 0 || values.bookImage ==null){\n         errors.bookImage = \"The bookImage is empty\"\n     }\n \n     return errors;\n }\n\n\n  /*\n    componentWillReceiveProps(nextProps){\n        const length = Object.entries(nextProps.book).length;\n        \n        if(length != 0){\n            const book = nextProps.book.book;\n            console.log(book)\n            this.setState({\n                formData : {\n                    bookImage : book.bookImage,\n                    isBookSelected : false\n                }\n            })\n        }\n       \n    }\n    */\n     /*------- it returns messages when action is called and state going to change  --------*/\n \n function mapStateToProps(state){\n   \n\n    const books = state.books\n    let book_value = {}\n    const length = Object.entries(books).length;\n    if( length != 0 && typeof(books.book) === \"object\" && books.book != null ){\n        const book = state.books.book\n        book_value =  {\n            _id : book._id,\n            name : book.name,\n            author : book.author,\n            review : book.review,\n            pages : book.pages,\n            rating : book.rating,\n            price : book.price,\n            bookImage : book.bookImage\n        }\n    }\n    \n     return {\n         book: state.books,\n         initialValues : book_value,\n     }\n }\n \n     /*------- reduxForm : connects redux-form with react form   --------*/\n /*\n\n export default reduxForm({\n     validate,\n     form:'EditReview',\n })(\n     connect(mapStateToProps,{ getBook , updateBook , clearBook , deleteBook  })(EditBook)\n )\n*/\n\n export default connect( mapStateToProps, { getBook , updateBook_with_image , updateBook_without_image  , clearBook , deleteBook  })(\n    reduxForm({\n        validate,\n        form: 'EditReview',\n        enableReinitialize : true,\n    })(EditBook)\n );"]},"metadata":{},"sourceType":"module"}