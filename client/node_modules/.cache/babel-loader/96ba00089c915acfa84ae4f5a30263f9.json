{"ast":null,"code":"var _jsxFileName = \"/home/rao/Desktop/Prakash-Rao Infotech/React/finalproject/project/book_reviews/client/src/containers/Admin/add.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n/*------- connect react with redux --------*/\n\nimport { connect } from 'react-redux';\n/*------- action which all data to data base --------*/\n\nimport { addBook, clearNewBook } from '../../actions';\n/*------- redux form --------*/\n\nimport { Field, reduxForm } from 'redux-form';\n\nclass AddBook extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bookImage: null //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n      /*------- renderInputField  --------*/\n\n    };\n\n    this.handleFileChange = event => {\n      if (event.target.file) {\n        this.setState({\n          bookImage: event.target.files[0].name\n        });\n      }\n    };\n\n    this.handleSelectChange = event => {\n      console.log(event.target.value);\n    };\n\n    this.componentDidUpdate = () => {\n      const length = Object.entries(this.props.data).length;\n\n      if (length > 1) {\n        const length_of_newbook = Object.entries(this.props.data.newbook).length;\n\n        if (length_of_newbook != 0) {\n          const postUploaded = this.props.data.newbook.post;\n\n          if (postUploaded) {\n            alert('Record Saved Succesfully.');\n            this.props.dispatch(clearNewBook());\n          } else if (!postUploaded) {\n            alert('Error while storing record.');\n          }\n        }\n      }\n    };\n  }\n\n  renderInputField(field) {\n    //    console.log(field)\n    const className = \"form-input \".concat(field.meta.touched && field.meta.error ? 'has-error' : '');\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, field.myLabel), React.createElement(\"input\", Object.assign({\n      type: \"text\"\n    }, field.input, {\n      onChange: field.input.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, field.meta.touched ? field.meta.error : ''));\n  }\n  /*------- renderFileInputField  --------*/\n\n\n  renderFileInputField(field) {\n    console.log(field);\n    const className = \"form-input \".concat(field.meta.touched && field.meta.error ? 'has-error' : '');\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, field.myLabel), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: field.input.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, field.meta.touched ? field.meta.error : ''));\n  }\n  /*------- renderTextareaField  --------*/\n\n\n  renderTextareaField(field) {\n    const className = \"form-input \".concat(field.meta.touched && field.meta.error ? 'has-error' : '');\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, field.myLabel), React.createElement(\"textarea\", Object.assign({}, field.input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, field.meta.touched ? field.meta.error : ''));\n  }\n  /*------- renderTextareaField  --------*/\n\n\n  renderNumberInputField(field) {\n    const className = \"form-input \".concat(field.meta.touched && field.meta.error ? 'has-error' : '');\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, field.myLabel), React.createElement(\"input\", Object.assign({\n      type: \"number\"\n    }, field.input, {\n      onChange: field.input.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, field.meta.touched ? field.meta.error : ''));\n  }\n  /*------- renderSelectField  --------*/\n\n\n  renderSelectField(field) {\n    const className = \"form-input \".concat(field.meta.touched && field.meta.error ? 'has-error' : '');\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, field.myLabel), React.createElement(\"select\", Object.assign({}, field.input, {\n      onChange: field.input.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), field.children), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, field.meta.touched ? field.meta.error : ''));\n  }\n  /*------- onSubmit() : runs on submit  --------*/\n\n\n  onSubmit(values) {\n    console.log(values);\n    let formData = new FormData();\n    formData.append('name', values.name);\n    formData.append('author', values.author);\n    formData.append('review', values.review);\n    formData.append('pages', values.pages);\n    formData.append('price', values.price);\n    formData.append('rating', values.rating);\n    formData.append('ownerId', this.props.user.login.id);\n\n    if (typeof values.bookImage !== 'string' && values.bookImage !== null) {\n      formData.append('bookImage', values.bookImage[0]);\n    } //  console.log(formData)\n\n\n    this.props.dispatch(addBook(formData));\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearNewBook());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Add a Review\"), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Back\")), React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(event => this.onSubmit(event)),\n      method: \"POST\",\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Field, {\n      myLabel: \"Enter Name\",\n      name: \"name\",\n      component: this.renderInputField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Field, {\n      myLabel: \"Enter Author\",\n      name: \"author\",\n      component: this.renderInputField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(Field, {\n      myLabel: \"Enter Review\",\n      name: \"review\",\n      component: this.renderTextareaField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(Field, {\n      myLabel: \"Enter Pages\",\n      name: \"pages\",\n      component: this.renderNumberInputField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(Field, {\n      myLabel: \"Enter Price\",\n      name: \"price\",\n      component: this.renderNumberInputField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(Field, {\n      myLabel: \"Select Rating\",\n      name: \"rating\",\n      component: this.renderSelectField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"option\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"5\")), React.createElement(Field, {\n      myLabel: \"Select Book Image\",\n      name: \"bookImage\",\n      type: \"file\",\n      onChange: this.handleFileChange,\n      component: this.renderFileInputField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values) {\n  // console.log(values)\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"The name is empty\";\n  }\n\n  if (!values.author) {\n    errors.author = \"The author is empty\";\n  }\n\n  if (!values.review) {\n    errors.review = \"The review is empty\";\n  }\n\n  if (!values.pages) {\n    errors.pages = \"The pages is empty\";\n  }\n\n  if (!values.price) {\n    errors.price = \"The price is empty\";\n  }\n\n  if (!values.rating) {\n    errors.rating = \"The rating is empty\";\n  }\n  /*\n      if(values.bookImage){\n  \n          if(values.bookImage.length != 0){\n              if(values.bookImage[0].size > 200000){\n                  errors.bookImage = \"The bookImage size must be less then 200kb\"\n              }\n          }\n      }\n  */\n\n\n  if (!values.bookImage || values.bookImage.length == 0) {\n    errors.bookImage = \"The bookImage is empty\";\n  }\n\n  return errors;\n}\n/*------- it returns messages when action is called and state going to change  --------*/\n\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  return {\n    data: state.books\n  };\n}\n/*------- reduxForm : connects redux-form with react form   --------*/\n\n\nexport default reduxForm({\n  validate,\n  form: 'AddBook'\n})(connect(mapStateToProps, {\n  addBook\n})(AddBook));","map":{"version":3,"sources":["/home/rao/Desktop/Prakash-Rao Infotech/React/finalproject/project/book_reviews/client/src/containers/Admin/add.js"],"names":["React","Component","Link","connect","addBook","clearNewBook","Field","reduxForm","AddBook","state","bookImage","handleFileChange","event","target","file","setState","files","name","handleSelectChange","console","log","value","componentDidUpdate","length","Object","entries","props","data","length_of_newbook","newbook","postUploaded","post","alert","dispatch","renderInputField","field","className","meta","touched","error","myLabel","input","onChange","renderFileInputField","renderTextareaField","renderNumberInputField","renderSelectField","children","onSubmit","values","formData","FormData","append","author","review","pages","price","rating","user","login","id","componentWillUnmount","render","handleSubmit","validate","errors","mapStateToProps","books","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { addBook , clearNewBook } from '../../actions'\n/*------- redux form --------*/\nimport { Field, reduxForm } from 'redux-form';\n\nclass AddBook extends Component {\n\n    state = {\n        bookImage : null\n    }\n\n    //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n/*------- renderInputField  --------*/\n    renderInputField(field){\n       //    console.log(field)\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return (\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input type=\"text\" {...field.input}   onChange = {field.input.onChange}  />\n                <div className=\"error\">\n                    {field.meta.touched? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n\n/*------- renderFileInputField  --------*/\nhandleFileChange = (event) => {\n    \n     if(event.target.file){\n        this.setState({\n            bookImage : event.target.files[0].name\n        })\n     } \n}\n\nrenderFileInputField(field){\n    console.log(field)\n    const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n    return (\n        <div className={className}>\n            <label>{field.myLabel}</label>\n            <input \n            type=\"file\"   \n            onChange = {field.input.onChange} \n            />\n            <div className=\"error\">\n                {field.meta.touched ? field.meta.error:''}\n            </div>\n        </div>\n    )\n}\n/*------- renderTextareaField  --------*/\n    renderTextareaField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <textarea \n                    {...field.input}\n                ></textarea>\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderTextareaField  --------*/\n    renderNumberInputField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input \n                type=\"number\"  \n                {...field.input}   \n                onChange = {field.input.onChange} \n                />\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n    \n\n    /*------- renderSelectField  --------*/\n\n    handleSelectChange = (event) => {\n        console.log(event.target.value)\n    }\n\n    renderSelectField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n\n                \n               <select  {...field.input}   onChange = {field.input.onChange}  >\n                    {field.children}\n               </select>\n\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n/*------- onSubmit() : runs on submit  --------*/\n    onSubmit(values){\n        console.log(values)\n        let formData = new FormData();\n        formData.append('name', values.name)\n        formData.append('author', values.author)\n        formData.append('review', values.review)\n        formData.append('pages', values.pages)  \n        formData.append('price', values.price)  \n        formData.append('rating', values.rating)\n        formData.append( 'ownerId' , this.props.user.login.id )\n        if (typeof values.bookImage !== 'string' && values.bookImage !== null) {\n          formData.append('bookImage', values.bookImage[0]);\n          }\n        //  console.log(formData)\n          this.props.dispatch(addBook(\n            formData\n         ))\n\n\n         \n    }\n\n    \n       \n    componentDidUpdate = () => {\n        const length = Object.entries(this.props.data).length;\n           if(  length > 1){\n            const length_of_newbook = Object.entries(this.props.data.newbook).length;\n            if(length_of_newbook != 0){\n                const postUploaded = this.props.data.newbook.post ;\n                if(postUploaded){\n                 alert('Record Saved Succesfully.')\n                 this.props.dispatch(clearNewBook())\n                }else if(!postUploaded){\n                 alert('Error while storing record.')\n                }\n            }\n            \n\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.dispatch(clearNewBook())\n    }\n    \n  \n    render(){\n\n        return(\n            <div className=\"Form\">\n                <div className=\"top\">\n                    <h3>Add a Review</h3>\n                    <Link to=\"/\">Back</Link>\n                </div>\n\n                <form onSubmit={this.props.handleSubmit((event)=>this.onSubmit(event))} method=\"POST\" encType=\"multipart/form-data\">\n\n                    <Field\n                        myLabel=\"Enter Name\"\n                        name=\"name\"\n                        component={this.renderInputField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter Author\"\n                        name=\"author\"\n                        component={this.renderInputField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter Review\"\n                        name=\"review\"\n                        component={this.renderTextareaField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter Pages\"\n                        name=\"pages\"\n                        component={this.renderNumberInputField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter Price\"\n                        name=\"price\"\n                        component={this.renderNumberInputField}\n                    />\n\n                    <Field\n                        myLabel=\"Select Rating\"                    \n                        name=\"rating\"\n                        \n                        component={this.renderSelectField}>\n                        <option></option>\n                        <option value='1'>1</option>\n                        <option value='2'>2</option>\n                        <option value='3'>3</option>\n                        <option value='4'>4</option>\n                        <option value='5'>5</option>\n                    </Field>\n \n                    <Field \n                    myLabel=\"Select Book Image\"                                        \n                    name=\"bookImage\"\n                    type=\"file\"\n                    onChange={this.handleFileChange}\n                    component={this.renderFileInputField}\n                    />\n\n                    <button type=\"submit\">Submit</button>\n\n                </form>\n            </div>\n        )\n    }\n}\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values){\n   // console.log(values)\n    const errors = {};\n\n    if(!values.name){\n        errors.name = \"The name is empty\"\n    }\n\n    if(!values.author){\n        errors.author = \"The author is empty\"\n    }\n\n    if(!values.review){\n        errors.review = \"The review is empty\"\n    }\n\n    if(!values.pages){\n        errors.pages = \"The pages is empty\"\n    }\n\n    if(!values.price){\n        errors.price = \"The price is empty\"\n    }\n\n    if(!values.rating){\n        errors.rating = \"The rating is empty\"\n    }\n/*\n    if(values.bookImage){\n\n        if(values.bookImage.length != 0){\n            if(values.bookImage[0].size > 200000){\n                errors.bookImage = \"The bookImage size must be less then 200kb\"\n            }\n        }\n    }\n*/\n    \n\n    if(!values.bookImage || values.bookImage.length == 0 ){\n        errors.bookImage = \"The bookImage is empty\"\n    }\n\n    \n\n    return errors;\n}\n    /*------- it returns messages when action is called and state going to change  --------*/\n\nfunction mapStateToProps(state){\n    console.log(state)\n    return {\n        data: state.books\n    }\n}\n\n    /*------- reduxForm : connects redux-form with react form   --------*/\n\nexport default reduxForm({\n    validate,\n    form:'AddBook',\n})(\n    connect(mapStateToProps,{addBook})(AddBook)\n)"]},"metadata":{},"sourceType":"module"}